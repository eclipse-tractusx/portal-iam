{
  "id": "CX-Central",
  "realm": "CX-Central",
  "displayName": "Catena-X Central",
  "notBefore": 1660280763,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 1,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 10,
  "roles": {
    "realm": [
      {
        "id": "9ed742fe-ac2e-462c-ab1f-09895db556b6",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      },
      {
        "id": "fd7248cf-7b65-4dbf-ae84-7a967e8ec7c2",
        "name": "user",
        "description": "basic user",
        "composite": false,
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      },
      {
        "id": "4c19f2aa-f9b9-473e-ba5c-46c2f4e52c8b",
        "name": "default-roles-catena-x realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "realm-management": [
              "manage-users",
              "view-clients"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      },
      {
        "id": "1ec798aa-cd95-43bd-9494-b1883e451fbb",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      }
    ],
    "client": {
      "sa-cl6-cx-10": [],
      "sa-cl3-cx-2": [],
      "sa-cl6-cx-11": [],
      "sa-cl6-cx-12": [],
      "sa-cl6-cx-13": [],
      "sa-cl6-cx-14": [],
      "SAP-Login": [],
      "sa-cl3-cx-1": [],
      "sa-cl6-cx-16": [],
      "security-admin-console": [],
      "sa-cl6-cx-17": [],
      "sa-cl10-cx-1": [],
      "sa-cl16-cx-1": [],
      "Cl2-CX-Portal": [
        {
          "id": "39ff444c-888a-4bf6-b8e1-343b66f8a067",
          "name": "decline_new_partner",
          "description": "User can decline a partner application",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c51f3a5a-02e0-414f-9c60-c2ec5c53bb09",
          "name": "update_company_role",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "46905bb9-8d3b-4666-891f-a67e8f963b3b",
          "name": "view_documents",
          "description": "User can view/download documents",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "0769d6ca-3056-42da-84cd-35f2d535d79e",
          "name": "delete_connectors",
          "description": "Delete company connectors",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "54bd7ad1-0773-4c9e-b1be-5cf41faa1c05",
          "name": "update_service_offering",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "d566bb6c-e621-4517-9322-26093231b77c",
          "name": "Service Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "view_submitted_applications",
                "view_license_types",
                "delete_connectors",
                "update_service_offering",
                "view_technical_setup",
                "view_tech_user_management",
                "view_service_marketplace",
                "CX User",
                "view_service_offering",
                "view_autosetup_status",
                "add_connectors",
                "upload_documents",
                "view_own_user_account",
                "view_use_cases",
                "view_idp",
                "view_services",
                "add_tech_user_management",
                "view_membership",
                "update_own_user_account",
                "add_service_offering",
                "view_service_subscriptions",
                "activate_subscription",
                "view_tech_roles",
                "view_notifications",
                "technical_roles_management",
                "delete_tech_user_management",
                "delete_own_user_account",
                "my_user_account",
                "view_subscription",
                "delete_notifications",
                "view_connectors",
                "view_partner_network"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4d1ca50b-8a6e-47ee-9a9b-ed5a919bc0d5",
          "name": "invite_new_partner",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "a029dec3-8c6a-4a2f-a60a-82249f0590fd",
          "name": "setup_client",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "34742e28-1497-4222-ad1f-93ab9feac92e",
          "name": "view_app_subscription",
          "description": "view app subscriptions in pending, active and inactive",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "d41dd839-6562-4be4-8364-de787c367458",
          "name": "delete_documents",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "8cceb06a-fa9d-4251-a336-9173d268c6d3",
          "name": "app_management",
          "description": "can manage apps",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "1290996a-0229-49b8-8aa4-732f4d27f5fa",
          "name": "view_company_data",
          "description": "view_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "ff9d65f5-dbdf-4971-8042-f36bb23cc52c",
          "name": "approve_app_release",
          "description": "User can approve apps to get released on the marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "27521792-5070-4dd9-93ed-d4fea69877e2",
          "name": "view_app_language",
          "description": "View available app language",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c41486f4-86d3-4b9b-9fb0-ceeaaf718268",
          "name": "modify_user_account",
          "description": "Users with this right can modify users related to their company",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "19c0e799-4ffd-4709-8b38-45540c677e50",
          "name": "view_autosetup_status",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "03490917-fd0d-4893-b901-3a426d3958db",
          "name": "App Developer",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "view_app_language",
                "technical_roles_management",
                "CX User",
                "view_technical_setup",
                "view_tech_user_management",
                "edit_apps",
                "app_management",
                "view_use_cases",
                "view_apps",
                "view_tech_roles"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5c0d11f9-a90d-4960-9917-450b70b419f2",
          "name": "Business Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "modify_user_account",
                "view_dataspaces",
                "add_user_account",
                "filter_apps",
                "view_apps",
                "view_notifications",
                "subscribe_apps",
                "view_services",
                "view_partner_network"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "03acc78a-0301-4518-a548-d5bd782c3d13",
          "name": "decision_ssicredential",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "37dc74e9-9f50-49d2-9b95-402b04aa84ff",
          "name": "add_connectors",
          "description": "Add new connector (registration and self-description)",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "9f7a5a51-6a38-4d53-816a-6db01ef52111",
          "name": "view_own_user_account",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "1d12d087-bcaf-4ad5-b21f-77fdce13b423",
          "name": "view_user_management",
          "description": "Users with this right can access the user management in CX",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "bcfd6c59-c999-440a-91ac-396a2b0322d4",
          "name": "view_idp",
          "description": "User can view IdP details",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "0cf91728-4ab6-413c-af72-4d8aee959c51",
          "name": "add_apps",
          "description": "Users with this role can publish new apps in the Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "146c2388-2e26-4505-b85d-6824a4f80a2e",
          "name": "add_tech_user_management",
          "description": "Create / request technical users for my org",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "15bd8123-3469-4505-93ff-a5bd3b929495",
          "name": "subscribe_service_offering",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "0d41349d-30a8-42c1-9e1c-2b67d69fba30",
          "name": "update_own_user_account",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "b584419b-1973-4c80-b5f9-0d5989263bd4",
          "name": "add_self_descriptions",
          "description": "add self descriptions",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f42c35ab-9a75-4be8-9c7d-3ca39a156eba",
          "name": "view_user_account",
          "description": "Users with this role can view the user account of others",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "e5267609-478c-40b6-bf96-6495bba42cd5",
          "name": "view_service_subscriptions",
          "description": "User is able to view service subscription under own service",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "065e25ce-29db-41f2-87aa-f4003d62df62",
          "name": "activate_subscription",
          "description": "Activation of subscriptions",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "0de2c803-1130-4ebf-9dfb-5016aadb9ca2",
          "name": "setup_idp",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "9db8ca83-6cfd-4c44-8ab7-ccbcb11da38f",
          "name": "view_tech_roles",
          "description": "View technical user roles",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "6560b255-cbc6-4fb7-8afe-d61732e34ab1",
          "name": "view_client_roles",
          "description": "Users with this right can view the client roles of an app",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "9c81a6b2-737b-477c-9836-479605350a5f",
          "name": "subscribe_service",
          "description": "subscribe_service",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "29ac8c4d-5296-467c-91fa-3a0d7487c912",
          "name": "request_ssicredential",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "3c3c8452-fd50-40bd-b223-9660233dd6af",
          "name": "delete_user_account",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c78c4b1f-5578-4b31-8be4-c386fd58c55c",
          "name": "view_subscription",
          "description": "View my company subscriptions",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f4eca60a-55c3-4b53-b3ee-f93a73d497f1",
          "name": "delete_notifications",
          "description": "User can delete notifications",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "2e210651-de0f-4f3d-9701-6736c39dfd36",
          "name": "submit_connector_sd",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5c5c64c9-46c8-4876-88d0-91cdba553718",
          "name": "view_license_types",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "cbf9e4ee-77f1-4310-b461-67995552324e",
          "name": "view_submitted_applications",
          "description": "Users with this right can view submitted applications and the respective application status",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c6e35f9f-f7c0-4899-9ce6-7cce7ea79304",
          "name": "approve_new_partner",
          "description": "User with this right can let new partners access the portal by approving the company registration request inside the admin board",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "67ac93fa-6616-466a-b1db-5293b13c15bb",
          "name": "view_technical_setup",
          "description": "Users with this right can setup EDC /IDP/etc.",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "a34170d5-779d-489b-b2bb-e1b99b88b638",
          "name": "view_tech_user_management",
          "description": "View technical users",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5998f67b-b190-443d-ab9b-3e76bbd73cab",
          "name": "add_user_account",
          "description": "Users with this right can add user accounts under their CX company",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5654ef02-0b23-422e-8eb3-7bd95778db8f",
          "name": "IT Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "delete_connectors",
                "view_technical_setup",
                "view_tech_user_management",
                "add_user_account",
                "view_company_data",
                "modify_user_account",
                "disable_idp",
                "add_connectors",
                "view_own_user_account",
                "view_user_management",
                "view_idp",
                "add_tech_user_management",
                "add_idp",
                "delete_idp",
                "view_membership",
                "update_own_user_account",
                "add_self_descriptions",
                "view_user_account",
                "setup_idp",
                "view_notifications",
                "view_certificates",
                "technical_roles_management",
                "view_client_roles",
                "delete_tech_user_management",
                "my_user_account",
                "request_ssicredential",
                "view_apps",
                "view_subscription",
                "view_use_case_participation",
                "modify_connectors",
                "delete_notifications",
                "view_connectors",
                "view_partner_network"
              ],
              "Cl3-CX-Semantic": [
                "add_semantic_model",
                "update_semantic_model",
                "view_semantic_model",
                "delete_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f70ac54f-c8fa-4d87-b7a6-e5a8c028cafe",
          "name": "Sales Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "subscribe_service",
                "CX User",
                "view_service_offering",
                "view_service_subscriptions",
                "activate_subscription",
                "subscribe_apps",
                "view_services"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4f2b58a5-0ebd-4b91-b354-4fefd40cc811",
          "name": "delete_apps",
          "description": "User with this role can delete apps published in the Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5bcbf360-c331-4fbf-b1d2-b16b1a1ec25a",
          "name": "approve_service_release",
          "description": "approve_service_release",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "43a0826f-ba1a-44d4-952f-e4b879be353c",
          "name": "view_service_marketplace",
          "description": "view_service_marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4581b083-0c1e-42a2-bb4c-85dfd14cfa23",
          "name": "Company Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "view_documents",
                "update_company_role",
                "delete_connectors",
                "setup_client",
                "view_app_subscription",
                "delete_documents",
                "view_company_data",
                "view_app_language",
                "modify_user_account",
                "view_autosetup_status",
                "add_connectors",
                "view_own_user_account",
                "view_user_management",
                "view_idp",
                "add_tech_user_management",
                "subscribe_service_offering",
                "update_own_user_account",
                "add_self_descriptions",
                "view_user_account",
                "setup_idp",
                "view_tech_roles",
                "view_client_roles",
                "subscribe_service",
                "request_ssicredential",
                "delete_user_account",
                "view_subscription",
                "delete_notifications",
                "view_technical_setup",
                "view_tech_user_management",
                "add_user_account",
                "view_service_marketplace",
                "view_service_offering",
                "disable_idp",
                "upload_documents",
                "view_use_cases",
                "subscribe_apps",
                "view_services",
                "add_idp",
                "delete_idp",
                "view_membership",
                "view_dataspaces",
                "filter_apps",
                "view_notifications",
                "view_certificates",
                "technical_roles_management",
                "delete_tech_user_management",
                "delete_own_user_account",
                "my_user_account",
                "view_apps",
                "view_use_case_participation",
                "modify_connectors",
                "view_connectors",
                "view_partner_network"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "496ae7df-fabd-4977-bb81-d6eb96ad81ed",
          "name": "CX User",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "view_documents",
                "view_membership",
                "view_dataspaces",
                "update_own_user_account",
                "filter_apps",
                "view_company_data",
                "view_notifications",
                "view_service_marketplace",
                "view_service_offering",
                "delete_own_user_account",
                "my_user_account",
                "view_own_user_account",
                "view_apps",
                "view_user_management",
                "view_subscription",
                "delete_notifications",
                "view_services",
                "view_partner_network"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "a1bc8bb5-03bb-465e-8795-c68e3920c51d",
          "name": "view_service_offering",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "d9609443-abd1-462f-8881-3e7d8213d785",
          "name": "disable_idp",
          "description": "disable an assigned idp",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "a5492307-2072-4c5d-9de3-f507f3d3302e",
          "name": "App Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "add_apps",
                "view_license_types",
                "CX User",
                "view_autosetup_status",
                "App Developer",
                "add_user_account",
                "edit_apps",
                "activate_subscription",
                "delete_apps"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "39c00d2f-491f-4658-96ef-9f47920afea6",
          "name": "upload_documents",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "b4bead06-e3c4-4fce-9e06-43d9d9537766",
          "name": "view_use_cases",
          "description": "Users can view available use cases in the network",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "51e6dede-686f-43d5-925a-693784f8a661",
          "name": "subscribe_apps",
          "description": "User is able to start the app subscription process",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "6e3d7bcf-7340-4def-bb76-8002acc73f95",
          "name": "view_services",
          "description": "view service marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "8d3a5c8d-d4dc-4aaa-8941-9cd38cd3906e",
          "name": "update_application_checklist_value",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "9b440b50-0ddd-4a6f-9a22-24073aea801e",
          "name": "add_idp",
          "description": "User can create a new idp under his organisation",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c190da2a-aad4-4a02-9904-88207ba322a6",
          "name": "delete_idp",
          "description": "User can delete company idps",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "8cebb227-d72c-428e-92fd-6b4c01cbb899",
          "name": "view_membership",
          "description": "view_membership",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "ee373634-1eb3-4702-a269-774f36f54453",
          "name": "decline_service_release",
          "description": "decline_service_release",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "8fe708e4-7870-4044-89eb-a74b8dc11a8e",
          "name": "view_dataspaces",
          "description": "View dataspace marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "b06c2999-6008-4fb6-a22f-93fdac150656",
          "name": "decline_app_release",
          "description": "User can decline apps to not get released on the marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "3a3af42c-c564-44ca-b83c-6d5c3bbd6087",
          "name": "add_service_offering",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "9f5b48bf-4fc2-4feb-8c4e-00b57f5f2bed",
          "name": "filter_apps",
          "description": "Users with this role can filter apps in the App Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "765bced5-b422-4f91-b35f-19d648595e6a",
          "name": "Purchaser",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "subscribe_service_offering",
                "CX User",
                "view_app_subscription",
                "subscribe_apps"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f9ec0166-c20b-4f1f-9f0d-11349fec657c",
          "name": "view_notifications",
          "description": "User can view notification details",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f1231514-aa65-408a-bf0d-c9d6d210e99a",
          "name": "view_certificates",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "7b816094-20e7-44fb-a45f-3ecb9d9d7157",
          "name": "CX Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "delete_company_data",
                "add_company_data",
                "view_company_data"
              ],
              "Cl5-CX-Custodian": [
                "delete_wallet",
                "add_wallet",
                "view_wallet",
                "update_wallet"
              ],
              "Cl1-CX-Registration": [
                "view_registration"
              ],
              "Cl2-CX-Portal": [
                "decline_new_partner",
                "view_documents",
                "update_company_role",
                "delete_connectors",
                "update_service_offering",
                "invite_new_partner",
                "setup_client",
                "view_app_subscription",
                "delete_documents",
                "app_management",
                "view_company_data",
                "approve_app_release",
                "view_app_language",
                "modify_user_account",
                "view_autosetup_status",
                "decision_ssicredential",
                "add_connectors",
                "view_own_user_account",
                "view_user_management",
                "view_idp",
                "add_apps",
                "add_tech_user_management",
                "subscribe_service_offering",
                "update_own_user_account",
                "add_self_descriptions",
                "view_user_account",
                "view_service_subscriptions",
                "activate_subscription",
                "setup_idp",
                "view_tech_roles",
                "view_client_roles",
                "subscribe_service",
                "request_ssicredential",
                "delete_user_account",
                "view_subscription",
                "delete_notifications",
                "view_submitted_applications",
                "view_license_types",
                "approve_new_partner",
                "view_technical_setup",
                "view_tech_user_management",
                "add_user_account",
                "delete_apps",
                "approve_service_release",
                "view_service_marketplace",
                "view_service_offering",
                "disable_idp",
                "upload_documents",
                "view_use_cases",
                "subscribe_apps",
                "view_services",
                "add_idp",
                "delete_idp",
                "view_membership",
                "decline_service_release",
                "view_dataspaces",
                "decline_app_release",
                "add_service_offering",
                "filter_apps",
                "view_notifications",
                "view_certificates",
                "technical_roles_management",
                "delete_tech_user_management",
                "delete_own_user_account",
                "my_user_account",
                "create_notifications",
                "edit_apps",
                "view_apps",
                "view_use_case_participation",
                "modify_connectors",
                "view_connectors",
                "view_partner_network"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model",
                "delete_semantic_model",
                "add_semantic_model",
                "update_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "92b5a061-8e54-4562-a86c-94c0bacef12d",
          "name": "technical_roles_management",
          "description": "technical roles management",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4ac0c3dc-1401-4ed6-a5f8-d8e08e2f5c78",
          "name": "delete_tech_user_management",
          "description": "Delete a technical user",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f02debf4-92ff-4b7f-a56c-db7c6321ceda",
          "name": "delete_own_user_account",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "99a8940c-0fbc-4f65-8134-4b598c3aabbc",
          "name": "my_user_account",
          "description": "view my own user account details",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "22b05ced-cd8e-4769-a368-b8266bf967ef",
          "name": "create_notifications",
          "description": "User can create notifications (ONLY FOR TEST REASONS)",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "13fe64aa-6de6-4b94-9e3d-af9b2c7f2917",
          "name": "edit_apps",
          "description": "Users with this role can edit apps which are published in the marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "817fa189-808e-465c-b75d-838336ab7a84",
          "name": "view_apps",
          "description": "Users with this role can view apps in the App Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "dc2b47a7-8e7e-49a1-b23a-e099168b8229",
          "name": "modify_connectors",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "42873085-5177-4ff5-88df-0290e568babd",
          "name": "view_use_case_participation",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "e5ec6a66-8fad-4066-bcdd-92041f894831",
          "name": "view_connectors",
          "description": "Look up company connectors and their details",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "104c094b-eaf5-4b0e-9758-f14dedf925da",
          "name": "view_partner_network",
          "description": "Partner Network view",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        }
      ],
      "Cl21-CX-DF": [
        {
          "id": "44a9692a-6d97-4ce0-9d1c-bcdd273792a9",
          "name": "view_discovery_endpoint",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "bf1cfe3e-3950-4fdc-8a58-13b73cec6740",
          "attributes": {}
        },
        {
          "id": "3bb6b58e-b10b-4705-aef9-56f359e46111",
          "name": "delete_discovery_endpoint",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "bf1cfe3e-3950-4fdc-8a58-13b73cec6740",
          "attributes": {}
        },
        {
          "id": "518d41c9-c7c7-4ab4-be2b-2b467977ecc9",
          "name": "add_discovery_endpoint",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "bf1cfe3e-3950-4fdc-8a58-13b73cec6740",
          "attributes": {}
        }
      ],
      "sa-cl8-cx-1": [],
      "Cl11-ADAC-Fleet": [
        {
          "id": "95cea93b-ea55-4582-b70e-efc722ee462b",
          "name": "customer",
          "composite": false,
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        },
        {
          "id": "95b0f5d0-5ce8-4324-b8bc-76888fe1addf",
          "name": "Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl11-ADAC-Fleet": [
                "admin"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        },
        {
          "id": "4559a892-ff7f-48aa-a4d7-792a00c8937f",
          "name": "oem",
          "composite": false,
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        },
        {
          "id": "37c2f367-f03f-4808-ab73-4c470f178625",
          "name": "admin",
          "composite": false,
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        }
      ],
      "Cl7-CX-BPDM": [
        {
          "id": "b59a076b-07c5-42fa-b8d8-04a65f077226",
          "name": "delete_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "04cd6d38-674f-4588-980a-8f120bddcc44",
          "attributes": {}
        },
        {
          "id": "a4829839-9df9-47c8-8eb0-57f4020000c3",
          "name": "add_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "04cd6d38-674f-4588-980a-8f120bddcc44",
          "attributes": {}
        },
        {
          "id": "d16779a5-03bd-4fbd-bf40-382c4348b205",
          "name": "view_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "04cd6d38-674f-4588-980a-8f120bddcc44",
          "attributes": {}
        }
      ],
      "admin-cli": [],
      "Cl16-CX-BPDMGate-Portal": [
        {
          "id": "94d85051-81d3-4c48-99de-7a808376ff32",
          "name": "view_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "17cdc8bc-0081-4fbd-8d28-969881e68507",
          "attributes": {}
        },
        {
          "id": "b37b3f91-126f-4908-a0cd-56d5eebf25d1",
          "name": "view_shared_data",
          "composite": false,
          "clientRole": true,
          "containerId": "17cdc8bc-0081-4fbd-8d28-969881e68507",
          "attributes": {}
        },
        {
          "id": "7c22a374-987c-4360-abc0-38d9efb7a137",
          "name": "update_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "17cdc8bc-0081-4fbd-8d28-969881e68507",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-21": [],
      "sa-cl6-cx-22": [],
      "realm-management": [
        {
          "id": "aafa6845-0920-4013-a283-594c9dc7ac32",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "08811aa8-7a05-489d-9f5e-bd51fd39fbc3",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "172dbf29-cc79-438f-9f56-24d0941f04ea",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "6ecdc37e-e84c-4b2f-b7f8-950ad361b831",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "3bc03769-6258-4202-9f83-2f9f33821ccb",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "93db5b47-913a-4c45-a227-33f0b5c90701",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "8cce49c4-c187-4573-ad0d-fddabc764ab3",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "a2621233-2118-44ef-aa5b-c1c75854e395",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "fa001419-f155-4709-af5a-7753fa0d5798",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "257abe39-01cd-44d1-96c3-e179d83effb6",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "ad4b404c-de7f-4224-bb64-fc132a6c54c1",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "manage-realm",
                "impersonation",
                "manage-events",
                "view-users",
                "create-client",
                "view-events",
                "query-clients",
                "view-identity-providers",
                "manage-users",
                "query-realms",
                "manage-identity-providers",
                "view-authorization",
                "view-clients",
                "manage-authorization",
                "query-users",
                "manage-clients",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "13ba5952-cd79-4aea-9511-0741b2578980",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "9842d196-88db-4df8-9c99-e383fa2e1b95",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "14d19c59-046b-4772-8c2d-9dc1ccc82f46",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "01feddbc-f742-42a9-ba3c-64f8ac2d5ba3",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "f36cf8ec-3f54-4df5-80e6-36b44c0b1803",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "b0c29452-6401-4f9d-a808-25b861c19006",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "acf55e28-5dad-462b-abf5-51f598a7b8e8",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "08547466-edfb-4676-9fb5-e4f4a6ee7363",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-23": [],
      "Cl16-CX-BPDMGate": [
        {
          "id": "891e715a-7fdb-4dbe-a177-998a383ee836",
          "name": "view_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "52f90723-b4c1-44c3-bef2-fd8ebe59ae6c",
          "attributes": {}
        },
        {
          "id": "cf42a03f-20f7-4ff3-a898-e1a93bf03520",
          "name": "update_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "52f90723-b4c1-44c3-bef2-fd8ebe59ae6c",
          "attributes": {}
        },
        {
          "id": "2a006c99-0790-4dd0-8b82-59c4fea1ce17",
          "name": "view_shared_data",
          "composite": false,
          "clientRole": true,
          "containerId": "52f90723-b4c1-44c3-bef2-fd8ebe59ae6c",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-24": [],
      "sa-cl6-cx-25": [],
      "sa-cl6-cx-26": [],
      "sa-cl6-cx-27": [],
      "sa-cl6-cx-28": [],
      "sa-cl7-cx-1": [],
      "sa-cl5-custodian-internaltest": [],
      "sa-cl7-cx-2": [],
      "sa-cl7-cx-3": [],
      "sa-cl7-cx-4": [],
      "sa-cl21-01": [],
      "sa-cl7-cx-5": [],
      "sa-cl7-cx-6": [],
      "sa-cl7-cx-7": [],
      "sa-cl1-cx-1": [],
      "sa-cl6-cx-20": [],
      "sa_testAutomation": [],
      "sa-cl5-custodian-3": [],
      "Cl15-BOSCH-AFQM": [
        {
          "id": "07e4c7f0-f7c1-420a-8788-81eb42b5a8cd",
          "name": "AFQM_USER",
          "composite": false,
          "clientRole": true,
          "containerId": "0cabe6af-0943-48ef-84cf-507a5b162aab",
          "attributes": {}
        }
      ],
      "sa-cl5-custodian-4": [],
      "sa-cl5-custodian-1": [],
      "sa-cl5-custodian-2": [],
      "sa-cl6-cx-18": [],
      "sa-cl6-cx-19": [],
      "urn:uuid:7bd86018-d0a2-421b-9e00-b77bab0838b1": [],
      "Cl13-CX-Battery": [
        {
          "id": "663693ff-4509-4b04-a260-635a66f421d9",
          "name": "Dismantler",
          "composite": false,
          "clientRole": true,
          "containerId": "dd6a7d43-a7b1-4808-90dd-e446b51b59f2",
          "attributes": {}
        },
        {
          "id": "0137339a-51f8-408c-adbe-5df3ab6f72e2",
          "name": "Recycler",
          "composite": false,
          "clientRole": true,
          "containerId": "dd6a7d43-a7b1-4808-90dd-e446b51b59f2",
          "attributes": {}
        },
        {
          "id": "450eb8ef-4407-445c-8808-f2cc8a6982ee",
          "name": "OEM",
          "composite": false,
          "clientRole": true,
          "containerId": "dd6a7d43-a7b1-4808-90dd-e446b51b59f2",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-4": [],
      "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com": [],
      "sa-cl6-cx-3": [],
      "sa-cl6-cx-2": [],
      "sa-cl6-cx-1": [],
      "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com": [
        {
          "id": "9252617c-aed9-4ab3-9fe5-a2193fdcad65",
          "name": "app_CatenaXUser",
          "composite": false,
          "clientRole": true,
          "containerId": "2d1e3584-9954-4b7f-a58b-8820ca390799",
          "attributes": {}
        }
      ],
      "sa-cl2-02": [],
      "sa-cl6-cx-8": [],
      "sa-cl2-01": [],
      "sa-cl6-cx-6": [],
      "Cl10-CX-BPDMShare": [],
      "sa-cl2-03": [],
      "sa-cl6-cx-5": [],
      "account-console": [],
      "sa-cl22-01": [],
      "Cl18-CX-Pal": [
        {
          "id": "09a0aceb-f0e5-40de-a718-3d2f532183c8",
          "name": "Viewer",
          "composite": false,
          "clientRole": true,
          "containerId": "77d56420-d8d8-4eab-9af0-6b6bb27de356",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-30": [],
      "Cl17-CX-Part": [
        {
          "id": "98e9e3cd-6b11-440a-8405-126971c54244",
          "name": "Supervisor",
          "composite": false,
          "clientRole": true,
          "containerId": "6493bcd5-a1ee-47f0-bec3-a1436f4d8b10",
          "attributes": {}
        },
        {
          "id": "3435cb3e-588f-4415-ba72-200638ec893d",
          "name": "Admin",
          "composite": false,
          "clientRole": true,
          "containerId": "6493bcd5-a1ee-47f0-bec3-a1436f4d8b10",
          "attributes": {}
        },
        {
          "id": "5a1480ee-c555-43fb-b380-fd172af0f5f3",
          "name": "User",
          "composite": false,
          "clientRole": true,
          "containerId": "6493bcd5-a1ee-47f0-bec3-a1436f4d8b10",
          "attributes": {}
        }
      ],
      "Cl22-CX-BPND": [
        {
          "id": "798bcaf7-fec5-414f-91ef-352967bfd72a",
          "name": "add_bpn_discovery",
          "composite": false,
          "clientRole": true,
          "containerId": "48fc6e9e-a736-4b0b-9fea-59ad847b02e0",
          "attributes": {}
        },
        {
          "id": "07c35188-e159-4f5b-b05e-a393c5b8c115",
          "name": "delete_bpn_discovery",
          "composite": false,
          "clientRole": true,
          "containerId": "48fc6e9e-a736-4b0b-9fea-59ad847b02e0",
          "attributes": {}
        },
        {
          "id": "05bc014a-ce02-4965-bdea-34d5b206e0e5",
          "name": "view_bpn_discovery",
          "composite": false,
          "clientRole": true,
          "containerId": "48fc6e9e-a736-4b0b-9fea-59ad847b02e0",
          "attributes": {}
        }
      ],
      "Cl15-CX-DFT": [
        {
          "id": "628c82c5-aac7-413c-8257-547687785a2a",
          "name": "User",
          "composite": false,
          "clientRole": true,
          "containerId": "f864e14f-5f27-4d1d-8f91-2d2a983e163c",
          "attributes": {}
        }
      ],
      "technical_roles_management": [
        {
          "id": "4ab4e352-bb16-47d3-a9cf-44730df6737b",
          "name": "Connector User",
          "composite": true,
          "composites": {
            "client": {
              "Cl22-CX-BPND": [
                "add_bpn_discovery",
                "delete_bpn_discovery",
                "view_bpn_discovery"
              ],
              "Cl21-CX-DF": [
                "view_discovery_endpoint"
              ],
              "Cl5-CX-Custodian": [
                "view_wallet"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model"
              ],
              "Cl2-CX-Portal": [
                "view_connectors"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "b5c9ff05-b0cf-414d-bd70-e38f8e4923cf",
          "name": "BPDM Management",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "delete_company_data",
                "add_company_data",
                "view_company_data"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "20f2c41a-dacd-4505-877a-bb899066a767",
          "name": "BPDM Pool",
          "composite": true,
          "composites": {
            "client": {
              "Cl7-CX-BPDM": [
                "view_company_data"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "6f153999-e1a9-4cc7-b9c0-f53e7c5f7a42",
          "name": "Identity Wallet Management",
          "composite": true,
          "composites": {
            "client": {
              "Cl5-CX-Custodian": [
                "view_wallet",
                "update_wallet"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "dee6cf7a-fb6b-451c-9ef7-87459893e48f",
          "name": "Registration External",
          "composite": false,
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "67ef1542-73d5-4179-8c4e-d4a297b8aad3",
          "name": "BPDM Partner Gate",
          "composite": true,
          "composites": {
            "client": {
              "Cl16-CX-BPDMGate": [
                "view_company_data",
                "update_company_data",
                "view_shared_data"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "08604187-8eef-435a-8116-ccc187b8e897",
          "name": "App Tech User",
          "composite": true,
          "composites": {
            "client": {
              "Cl22-CX-BPND": [
                "add_bpn_discovery",
                "delete_bpn_discovery",
                "view_bpn_discovery"
              ],
              "Cl21-CX-DF": [
                "view_discovery_endpoint"
              ],
              "Cl6-CX-DAPS": [
                "create_daps_client"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model"
              ],
              "Cl2-CX-Portal": [
                "view_membership",
                "view_connectors"
              ],
              "Cl20-CX-IRS": [
                "view_irs"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "01cbe8bf-7957-4b9f-ae79-66a068c2c7d9",
          "name": "Service Management",
          "composite": true,
          "composites": {
            "client": {
              "Cl2-CX-Portal": [
                "add_service_offering",
                "add_connectors",
                "activate_subscription"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        },
        {
          "id": "d5781775-3fbd-4f46-84ea-b19164393205",
          "name": "Dataspace Discovery",
          "composite": true,
          "composites": {
            "client": {
              "Cl2-CX-Portal": [
                "view_connectors"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6df310ed-500e-43d5-b510-fa4668e939ee",
          "attributes": {}
        }
      ],
      "Cl12-CX-TestManager": [],
      "sa-cl6-cx-29": [],
      "sa-beta-cx7": [],
      "sa-beta-cx6": [],
      "sa-beta-cx5": [],
      "sa-beta-cx4": [],
      "Cl20-CX-IRS": [
        {
          "id": "ee61636e-de19-41cb-be70-ec4c730c474c",
          "name": "view_irs",
          "description": "view_irs",
          "composite": false,
          "clientRole": true,
          "containerId": "c154b82c-c760-4da5-8b27-7f45b39259e6",
          "attributes": {}
        }
      ],
      "sa-beta-cx3": [],
      "sa-cl5-cx-1": [],
      "sa-beta-cx2": [],
      "sa-beta-cx1": [],
      "Cl16-CX-CRisk": [
        {
          "id": "3fc6e7e8-9115-4d0f-a0ab-3f950321af11",
          "name": "Company Admin",
          "description": "Company Admin",
          "composite": false,
          "clientRole": true,
          "containerId": "9767ac38-506a-4d20-aeb7-0e40cd00e908",
          "attributes": {}
        },
        {
          "id": "a8acd905-7c26-49fe-9910-11a0239bb39b",
          "name": "User",
          "composite": false,
          "clientRole": true,
          "containerId": "9767ac38-506a-4d20-aeb7-0e40cd00e908",
          "attributes": {}
        }
      ],
      "Cl5-CX-Custodian": [
        {
          "id": "11c06d7d-8cab-42e8-b8bb-599940c61f2b",
          "name": "delete_wallet",
          "description": "User can delete his wallet",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "7cbf7bf7-be0b-4372-9b5d-56bfcfad4ef7",
          "name": "add_wallets",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "4e985f0a-4d33-409c-93a2-8d1b1de000e6",
          "name": "delete_wallets",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "823ef0fd-ad22-4817-b31b-4638139b435c",
          "name": "update_wallets",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "191ff80d-5525-4dc5-a761-80783a4d8c04",
          "name": "add_wallet",
          "description": "Add a new wallet",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "d6521ed5-9154-49a8-9ac4-c0a12573b201",
          "name": "view_wallet",
          "description": "Can view own wallet",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "dbdb11f0-f21a-4012-9610-43934407c309",
          "name": "update_wallet",
          "description": "Change existing wallet",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        },
        {
          "id": "82b61160-ff26-4dd0-abf5-33d6ec57cdc7",
          "name": "view_wallets",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        }
      ],
      "Cl1-CX-Registration": [
        {
          "id": "3c7b8dec-3ef8-4665-82a3-2d8aeed059d8",
          "name": "view_documents",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "21fce69f-e42a-4f03-a47f-74441f5719c7",
          "name": "view_company_roles",
          "description": "View Company Roles and Descriptions",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "9fe7f83e-c5af-408f-9e02-66ca6d318d9b",
          "name": "delete_documents",
          "description": "delete_documents",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "009c93b3-8cb7-4961-9492-9d2fc9574583",
          "name": "upload_documents",
          "description": "User is able to upload documents in the registration service",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "9607136e-9daf-4057-9274-767d4de473ab",
          "name": "add_company_data",
          "description": "User is able to add / edit company data under the registration process",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "b1b1e25d-0e14-4fc0-882a-126f3f6cbbc0",
          "name": "view_registration",
          "description": "Permission to access & view the registration process",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "fd523149-5499-412d-82b0-d8aeccbb5c5e",
          "name": "Company Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "view_documents",
                "view_company_roles",
                "submit_registration",
                "sign_consent",
                "delete_documents",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "e5f03bf6-0b3c-4539-8873-d146bd18e504",
          "name": "CX Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "view_documents",
                "view_company_roles",
                "submit_registration",
                "sign_consent",
                "delete_documents",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "086cf0b0-7181-4a8a-89d3-137fd02e0847",
          "name": "submit_registration",
          "description": "User is able to submit the registration to Catena-X",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "87ecd7bb-039a-4e0a-a1a8-ca17b32d7891",
          "name": "Signing Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "view_documents",
                "view_company_roles",
                "submit_registration",
                "sign_consent",
                "delete_documents",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "e12709ce-c1fc-454a-a095-4088cab26539",
          "name": "sign_consent",
          "description": "User is able to confirm Terms & Conditions",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "461ea134-91cd-4482-a0cb-6f8406846807",
          "name": "Legal Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "view_documents",
                "view_company_roles",
                "submit_registration",
                "sign_consent",
                "delete_documents",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "44d50090-3343-48d8-9843-7eeb15276869",
          "name": "invite_user",
          "description": "User is able to add additional users to the registration process",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        }
      ],
      "broker": [
        {
          "id": "d1330d07-b783-43ad-b545-85a230060023",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "03885031-084a-4317-aa51-de9b4acf8fa9",
          "attributes": {}
        }
      ],
      "sa-clx-cx-2": [],
      "sa-clx-cx-1": [],
      "Cl3-CX-Semantic": [
        {
          "id": "beef62b1-2e1c-4fc2-8813-7f3981ebfde2",
          "name": "view_semantic_model",
          "description": "View existing data models",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        },
        {
          "id": "fa8261a8-fe09-4867-a558-438737917185",
          "name": "delete_semantic_model",
          "description": "User can delete existing semantic models",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        },
        {
          "id": "a46242a3-26db-4b86-b836-bf0339168c56",
          "name": "add_semantic_model",
          "description": "Add semantic model",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        },
        {
          "id": "f7d88948-b75d-4ed0-851d-b4c645ae27ca",
          "name": "update_semantic_model",
          "description": "User can update existing semantic models",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        }
      ],
      "sa-cl1-reg-2": [],
      "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com": [
        {
          "id": "af4e22d2-94c8-48cb-9c5e-fa8b47d74538",
          "name": "EarthCommerce.Buyer",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "13510549-38f2-45bb-9e55-9477e35951b7",
          "name": "CE.Dismantler.Purchase",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "5c63dd30-fc5c-439a-ad15-c04006cf9727",
          "name": "EarthCommerce.UserRC_QAS2",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "8b14d5c3-2722-48d9-b24d-1195a8d3b7da",
          "name": "EC.Buyer.Manager",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "48503f8d-b755-4aba-a7d6-52cd2cb90058",
          "name": "EarthCommerce.BuyerRC_QAS2",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "50f5d4d7-63d4-4447-addb-02771ac093c5",
          "name": "CE.Dismantler.Leader",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "f4840cd9-6d46-4743-be4a-88039df5c84a",
          "name": "EarthCommerce.Advanced.BuyerRC_QAS2",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "7e9c6415-776c-4fe5-86d2-3999c7e7078e",
          "name": "CE.Dismantler.View",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "8de07354-c022-4724-aa41-2f3aee66f0db",
          "name": "EarthCommerce.Content.Manager",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "eeb80e52-00f1-461c-bfd3-960a91f56fe8",
          "name": "EarthCommerce.AdministratorRC_QAS2",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "d838e0d7-2c9f-41dd-8989-23ef2051c39f",
          "name": "EarthCommerce.Content.ManagerRC_QAS2",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "77edbd2b-d31d-428b-8f52-dc356e36c27f",
          "name": "EC.Buyer.buy",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        }
      ],
      "Cl9-CDQ-Fraud": [
        {
          "id": "9f5d6884-a643-4846-bddc-39adeda9aef2",
          "name": "fraud_app_manager",
          "composite": false,
          "clientRole": true,
          "containerId": "3fbe1a86-143d-4d52-8138-01aa23875664",
          "attributes": {}
        },
        {
          "id": "2d7ea02b-114a-40d6-9c2c-ef57cc7eef67",
          "name": "fraud_app_user",
          "composite": false,
          "clientRole": true,
          "containerId": "3fbe1a86-143d-4d52-8138-01aa23875664",
          "attributes": {}
        }
      ],
      "Cl6-CX-DAPS": [
        {
          "id": "96c93605-67d4-4944-af56-30ca028e9b09",
          "name": "create_daps_client",
          "composite": false,
          "clientRole": true,
          "containerId": "28273f37-cff9-44c3-9731-2a7a63025d28",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-9": [],
      "account": [
        {
          "id": "9a1e745f-e0b5-4efc-9336-3ba403a79cb8",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "93070949-280d-4183-9761-94792722cc1d",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "20d5e725-3d3b-4bfe-9a62-5e650ae55b53",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "d0312a58-8fba-4fea-9a07-bd5e1515f9d8",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "1bc65f13-4eda-4954-9944-6699ec3913b3",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "8b60326c-d508-4563-a41f-7973383d7501",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "ef74a99a-0297-43c7-ae30-109c08a5aa69",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "4c19f2aa-f9b9-473e-ba5c-46c2f4e52c8b",
    "name": "default-roles-catena-x realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "CX-Central"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id" : "6529834b-a4c1-4b11-a200-d77e5fe7443f",
      "createdTimestamp" : 1651814956235,
      "username" : "app-provider.aa4b2a5d-2dc7-419c-a8ce-72886e0e32e9",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Tester",
      "lastName" : "App Provider",
      "email" : "app-provider@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL00000003CSLL" ],
        "organisation" : [ "App-Provider" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "App-Provider",
        "userId" : "aa4b2a5d-2dc7-419c-a8ce-72886e0e32e9",
        "userName" : "app-provider@cx.com"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "4a23930a-30b6-461c-9ad4-58d3e761a0b5",
      "createdTimestamp" : 1652788390200,
      "username" : "company-1.03b7feab-cc55-48cd-882a-0d8db03a8c8c",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "Company Admin",
      "email" : "company.admin@cx.com",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Company-1",
        "userId" : "03b7feab-cc55-48cd-882a-0d8db03a8c8c",
        "userName" : "company admin"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "ee93d4e6-2088-4352-b6e4-21f3fa7f390e",
      "createdTimestamp" : 1652788086549,
      "username" : "company-2.a81a425e-bdb4-482b-8535-a02c313c25af",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "Company Admin",
      "email" : "companyadmin@cx.com",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Company-2",
        "userId" : "a81a425e-bdb4-482b-8535-a02c313c25af",
        "userName" : "company admin"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "502dabcf-01c7-47d9-a88e-0be4279097b5",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-operator.656e8a94-188b-4a3e-9eec-b45d8efd8347",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Tester",
      "lastName" : "CX Operator",
      "email" : "cx-operator@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL00000003CRHL" ],
        "organisation" : [ "CX-Operator" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Operator",
        "userId" : "656e8a94-188b-4a3e-9eec-b45d8efd8347",
        "userName" : "cx-operator@cx.com"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "CX Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "93a03e4c-8ba5-4d81-93f9-4b065b005b33",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-test-access.08132c4c-146d-41ee-938a-09759783eea1",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "user",
      "lastName" : "company 2",
      "email" : "company2@user.de",
      "attributes" : {
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "08132c4c-146d-41ee-938a-09759783eea1",
        "userName" : "company 2 user"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl13-CX-Battery" : [ "Recycler" ],
        "Cl3-CX-Semantic" : [ "view_semantic_model" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "623770c5-cf38-4b9f-9a35-f8b9ae972e2d",
      "createdTimestamp" : 1652269150847,
      "username" : "cx-test-access.0f3abd37-9b87-421c-81e7-14a612bab68c",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "CX User",
      "email" : "cxuser@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001", "BPNL00000003CRHK" ],
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "0f3abd37-9b87-421c-81e7-14a612bab68c",
        "userName" : "cx user"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl15-CX-DFT" : [ "User" ],
        "Cl9-CDQ-Fraud" : [ "fraud_app_user" ],
        "Cl1-CX-Registration" : [ "CX Admin", "Company Admin" ],
        "Cl2-CX-Portal" : [ "CX User" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "2772f485-b0e8-4fab-b5a8-3ed517c5c766",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-test-access.311963ed-9c58-44a6-8103-0b689cebaeaa",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Tester",
      "lastName" : "PartChain Three",
      "email" : "partchain.three@cx.de",
      "attributes" : {
        "bpn" : [ "BPNL00000003CML1" ],
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "311963ed-9c58-44a6-8103-0b689cebaeaa",
        "userName" : "partchain.three@cx.de"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl17-CX-Part" : [ "Admin" ],
        "Cl2-CX-Portal" : [ "CX User" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "e193b73c-f4ec-46c2-b686-5c77fe49135e",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-test-access.3d0f5663-2de1-4a08-a394-22d1d4248efc",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Tester",
      "lastName" : "PartChain One",
      "email" : "partchain.one@cx.de",
      "attributes" : {
        "bpn" : [ "BPNL00000003CML1" ],
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "3d0f5663-2de1-4a08-a394-22d1d4248efc",
        "userName" : "partchain.one@cx.de"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl17-CX-Part" : [ "User" ],
        "Cl2-CX-Portal" : [ "CX User" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "3d8142f1-860b-48aa-8c2b-1ccb18699f65",
      "createdTimestamp" : 1652788477397,
      "username" : "cx-test-access.6f25fc27-a5ec-4ad8-bd89-e05ca462c741",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "CX Admin",
      "email" : "cxadmin@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL00000003CRHK" ],
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "6f25fc27-a5ec-4ad8-bd89-e05ca462c741",
        "userName" : "cx admin"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl16-CX-CRisk" : [ "Company Admin", "User" ],
        "Cl9-CDQ-Fraud" : [ "fraud_app_manager", "fraud_app_user" ],
        "technical_roles_management" : [ "BPDM Management" ],
        "Cl1-CX-Registration" : [ "CX Admin" ],
        "Cl2-CX-Portal" : [ "CX Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "cd863f9a-5a04-44d6-bf8e-9d76e37139b2",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-test-access.98715874-e65c-4780-95ad-fb4e8eb917a8",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "user",
      "lastName" : "company 1",
      "email" : "company1@user.de",
      "attributes" : {
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "98715874-e65c-4780-95ad-fb4e8eb917a8",
        "userName" : "company 1 user"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl13-CX-Battery" : [ "Dismantler" ],
        "Cl3-CX-Semantic" : [ "view_semantic_model" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "47ea7f1f-f10d-4cb2-acaf-b77323ef25b3",
      "createdTimestamp" : 1652269178374,
      "username" : "cx-test-access.a0661e13-c74c-4b86-8151-ed1c348d0e69",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "Company Admin",
      "email" : "companyadmin@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001" ],
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "a0661e13-c74c-4b86-8151-ed1c348d0e69",
        "userName" : "company admin"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "def0d51e-0a78-4774-ab51-b19a0cbe9d94",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-test-access.f3d5e0c6-bb7b-4bb2-963f-3daffc90328d",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Tester",
      "lastName" : "PartChain Two",
      "email" : "partchain.two@cx.de",
      "attributes" : {
        "bpn" : [ "BPNL00000003CML1" ],
        "organisation" : [ "CX-Test-Access" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "f3d5e0c6-bb7b-4bb2-963f-3daffc90328d",
        "userName" : "partchain.two@cx.de"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl17-CX-Part" : [ "Supervisor" ],
        "Cl2-CX-Portal" : [ "CX User" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "070e2c20-4b09-4670-84c8-af882589e7ea",
      "createdTimestamp" : 1651814956235,
      "username" : "cx-test-access.f58e4a43-c560-443d-9b1e-fcb182682bcb",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "IT Admin",
      "email" : "itadmin@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001" ],
        "organisation" : [ "keycloak-oidc" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "CX-Test-Access",
        "userId" : "f58e4a43-c560-443d-9b1e-fcb182682bcb",
        "userName" : "it admin"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "IT Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "18f1a488-06e9-4dc4-ad43-cfb9c9a0c7da",
      "createdTimestamp" : 1652269150847,
      "username" : "security-company.18f1a488-06e9-4dc4-ad43-cfb9c9a0c7db",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 1",
      "lastName" : "CX User 1",
      "email" : "cxuser-1@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001", "BPNL00000003CRHK" ],
        "organisation" : [ "Security-Company" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "18f1a488-06e9-4dc4-ad43-cfb9c9a0c7db",
        "userName" : "cx-user-1"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ],
        "Cl2-CX-Portal" : [ "CX User" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "22b92584-895a-442f-afe9-ed10fe997d94",
      "createdTimestamp" : 1652269178374,
      "username" : "security-company.22b92584-895a-442f-afe9-ed10fe997d95",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 1",
      "lastName" : "Company Admin 1",
      "email" : "companyadmin-1@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001" ],
        "organisation" : [ "Security-Company" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "22b92584-895a-442f-afe9-ed10fe997d95",
        "userName" : "company-admin-1"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "3d064630-3736-477e-80e2-148faf1cd210",
      "createdTimestamp" : 1651814956235,
      "username" : "security-company.3d064630-3736-477e-80e2-148faf1cd211",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 1",
      "lastName" : "IT Admin 1",
      "email" : "itadmin-1@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001" ],
        "organisation" : [ "keycloak-oidc" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "3d064630-3736-477e-80e2-148faf1cd211",
        "userName" : "it-admin-1"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "IT Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "4746cff4-7a64-4be8-a70e-cf762a7011b7",
      "createdTimestamp" : 1651814956235,
      "username" : "security-company.4746cff4-7a64-4be8-a70e-cf762a7011b8",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 2",
      "lastName" : "IT Admin 2",
      "email" : "itadmin-2@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001" ],
        "organisation" : [ "keycloak-oidc" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "4746cff4-7a64-4be8-a70e-cf762a7011b8",
        "userName" : "it-admin-2"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "IT Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "555b0b81-6ead-4d3d-8d5d-41c07bb8cfbb",
      "createdTimestamp" : 1652788477397,
      "username" : "security-company.555b0b81-6ead-4d3d-8d5d-41c07bb8cfbc",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 1",
      "lastName" : "CX Admin 1",
      "email" : "cxadmin-1@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL00000003CRHK" ],
        "organisation" : [ "Security-Company" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "555b0b81-6ead-4d3d-8d5d-41c07bb8cfbc",
        "userName" : "cx-admin-1"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "CX Admin" ],
        "Cl2-CX-Portal" : [ "CX Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "8b747479-5e22-4e9c-a0a4-a940e8ec0535",
      "createdTimestamp" : 1652269150847,
      "username" : "security-company.8b747479-5e22-4e9c-a0a4-a940e8ec0536",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 2",
      "lastName" : "CX User 2",
      "email" : "cxuser-2@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001", "BPNL00000003CRHK" ],
        "organisation" : [ "Security-Company" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "8b747479-5e22-4e9c-a0a4-a940e8ec0536",
        "userName" : "cx-user-2"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ],
        "Cl2-CX-Portal" : [ "CX User" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "cc860ece-ede3-4c03-86f9-28e23978b104",
      "createdTimestamp" : 1652788477397,
      "username" : "security-company.cc860ece-ede3-4c03-86f9-28e23978b105",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 2",
      "lastName" : "CX Admin 2",
      "email" : "cxadmin-2@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL00000003CRHK" ],
        "organisation" : [ "Security-Company" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "cc860ece-ede3-4c03-86f9-28e23978b105",
        "userName" : "cx-admin-2"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "CX Admin" ],
        "Cl2-CX-Portal" : [ "CX Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "e5e403d5-3bd9-48f6-8931-7c0c717c3f40",
      "createdTimestamp" : 1652269178374,
      "username" : "security-company.e5e403d5-3bd9-48f6-8931-7c0c717c3f41",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User 2",
      "lastName" : "Company Admin 2",
      "email" : "companyadmin-2@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL000000000001" ],
        "organisation" : [ "Security-Company" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Security-Company",
        "userId" : "e5e403d5-3bd9-48f6-8931-7c0c717c3f41",
        "userName" : "company-admin-2"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl1-CX-Registration" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }, {
      "id" : "8be5ee49-4b9c-4008-b641-138305430cc4",
      "createdTimestamp" : 1651814956235,
      "username" : "service-provider.dc438ad3-8bcf-49cc-beb0-437be2745720",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : false,
      "firstName" : "Test User",
      "lastName" : "Service Provider",
      "email" : "service-provider@cx.com",
      "attributes" : {
        "bpn" : [ "BPNL07800HZ01643" ],
        "organisation" : [ "Service-Provider" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Service-Provider",
        "userId" : "dc438ad3-8bcf-49cc-beb0-437be2745720",
        "userName" : "service-provider@cx.com"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    },
    {
      "id": "02b171de-8b88-4d6e-a474-83d88cc743a0",
      "createdTimestamp": 1668614896844,
      "username": "service-account-sa-beta-cx1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx1",
      "attributes": {
        "bpn": [
          "BPNL0000000004WK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1e749bed-5182-47c9-a4a3-d32b4dbc7db9",
      "createdTimestamp": 1668615036611,
      "username": "service-account-sa-beta-cx2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx2",
      "attributes": {
        "bpn": [
          "BPNL0000000002XY"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "82a42b46-912e-4be7-8983-84e04a920c5a",
      "createdTimestamp": 1668615166988,
      "username": "service-account-sa-beta-cx3",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx3",
      "attributes": {
        "bpn": [
          "BPNL0000000005VV"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "9680ddce-a38e-41a7-9d63-cf25fe11730e",
      "createdTimestamp": 1668615267089,
      "username": "service-account-sa-beta-cx4",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx4",
      "attributes": {
        "bpn": [
          "BPNL0000000006V6"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "c323b0bd-ea82-42f8-84b8-83744dcd8db6",
      "createdTimestamp": 1668615612880,
      "username": "service-account-sa-beta-cx5",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx5",
      "attributes": {
        "bpn": [
          "BPNL0000000003X9"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "540c10ba-ed83-4ee6-8d7d-09e7a281c0b4",
      "createdTimestamp": 1668615711719,
      "username": "service-account-sa-beta-cx6",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx6",
      "attributes": {
        "bpn": [
          "BPNL0000000008TS"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "38c96e0e-8ccf-455d-8534-7fcbd5be98d9",
      "createdTimestamp": 1668615800408,
      "username": "service-account-sa-beta-cx7",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-beta-cx7",
      "attributes": {
        "bpn": [
          "BPNL0000000007UH"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "5d1c5051-d9d9-4558-9c3c-78db197b2cdd",
      "createdTimestamp": 1668499979859,
      "username": "service-account-sa-cl10-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl10-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "add_company_data",
          "view_company_data"
        ],
        "technical_roles_management": [
          "BPDM Partner Gate"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "db62cbba-6237-435a-8a87-042ffbb79fd4",
      "createdTimestamp": 1668499118676,
      "username": "service-account-sa-cl16-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl16-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "BPDM Partner Gate"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a6b48ac7-a4cb-4527-a5d3-4f52e9175e7a",
      "createdTimestamp": 1663675052539,
      "username": "service-account-sa-cl1-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl1-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl1-CX-Registration": [
          "Company Admin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "e69c1397-eee8-434a-b83b-dc7944bb9bdd",
      "createdTimestamp": 1651730911692,
      "username": "service-account-sa-cl1-reg-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl1-reg-2",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "realm-management": [
          "manage-identity-providers",
          "manage-clients"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f0c69a64-dfbe-46e4-92db-75f6f4670909",
      "createdTimestamp": 1676572155414,
      "username": "service-account-sa-cl2-01",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl2-01",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "update_application_checklist_value"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "18c3a6b3-ecfe-4572-bbb4-af0c1823f206",
      "createdTimestamp": 1676572207640,
      "username": "service-account-sa-cl2-02",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl2-02",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "submit_connector_sd",
          "update_application_checklist_value"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a0bbb8fa-cc40-44e3-828d-342e782fd284",
      "createdTimestamp": 1681380138448,
      "username": "service-account-sa-cl2-03",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl2-03",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "319d6b7f-bd88-4103-8124-e8ac4c791acf",
      "createdTimestamp": 1681915810810,
      "username": "service-account-sa-cl21-01",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl21-01",
      "attributes": {
        "bpn": [
          "BPNL000560TEST01"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl21-CX-DF": [
          "view_discovery_endpoint",
          "delete_discovery_endpoint",
          "add_discovery_endpoint"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b52bd8e5-98ce-48b4-af43-0b43b45d0358",
      "createdTimestamp": 1681915925763,
      "username": "service-account-sa-cl22-01",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl22-01",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl22-CX-BPND": [
          "add_bpn_discovery",
          "delete_bpn_discovery",
          "view_bpn_discovery"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "965ae857-1e91-4e0b-bdb5-4efd1fc7ea9c",
      "createdTimestamp": 1658347753956,
      "username": "service-account-sa-cl3-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl3-cx-1",
      "attributes": {
        "bpn": [
          "CAX0000000000001"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "delete_semantic_model",
          "add_semantic_model",
          "update_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "24be7ee7-0948-435e-84fe-dab3da395831",
      "createdTimestamp": 1668612874208,
      "username": "service-account-sa-cl3-cx-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl3-cx-2",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6e9d388a-1a21-4196-8210-80e9a696ae87",
      "createdTimestamp": 1651615151516,
      "username": "service-account-sa-cl5-custodian-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-custodian-1",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "update_wallets",
          "view_wallet",
          "update_wallet",
          "view_wallets"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "ca2657a8-eba9-4cb4-8b66-8cc30911dfa1",
      "createdTimestamp": 1657558751239,
      "username": "service-account-sa-cl5-custodian-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-custodian-2",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "add_wallets",
          "view_wallets"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "0e1028a6-99c2-46ad-a323-9917ebe7346b",
      "createdTimestamp": 1657571043337,
      "username": "service-account-sa-cl5-custodian-3",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-custodian-3",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "view_wallet",
          "update_wallet"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "300de02c-e667-4528-ac99-a3749c214bd2",
      "createdTimestamp": 1657571107848,
      "username": "service-account-sa-cl5-custodian-4",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-custodian-4",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "view_wallet",
          "update_wallet"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "8b7b0192-b24f-41b3-b7b7-b49efcc49e34",
      "createdTimestamp": 1654613733324,
      "username": "service-account-sa-cl5-custodian-internaltest",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-custodian-internaltest",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "delete_wallet",
          "add_wallets",
          "delete_wallets",
          "update_wallets",
          "add_wallet",
          "view_wallet",
          "update_wallet",
          "view_wallets"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "7dfe07ab-29fe-404b-8528-fa11bf608757",
      "createdTimestamp": 1652858406207,
      "username": "service-account-sa-cl5-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl5-CX-Custodian": [
          "view_wallets"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "22d4d18c-5e35-437d-8adc-4b47dca71cc2",
      "createdTimestamp": 1651729631982,
      "username": "service-account-sa-cl6-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-1",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "d127fde5-1645-4e8f-be89-fd3ca7ef156c",
      "createdTimestamp": 1652049343884,
      "username": "service-account-sa-cl6-cx-10",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-10",
      "attributes": {
        "bpn": [
          "BPNL00000003CML1"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl17-CX-Part": [
          "Supervisor"
        ],
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl20-CX-IRS": [
          "view_irs"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "50eadaf8-9ef9-43b0-93cd-70dbc02124bd",
      "createdTimestamp": 1652049455795,
      "username": "service-account-sa-cl6-cx-11",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-11",
      "attributes": {
        "bpn": [
          "BPNL00000003CSGV"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a944c2da-d846-47dc-a72a-92573f450ec1",
      "createdTimestamp": 1652221234622,
      "username": "service-account-sa-cl6-cx-12",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-12",
      "attributes": {
        "bpn": [
          "BPNL00000003B2OM"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model",
          "add_semantic_model",
          "update_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f593ea3d-111d-4b27-b081-321e6b19a844",
      "createdTimestamp": 1652418651244,
      "username": "service-account-sa-cl6-cx-13",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-13",
      "attributes": {
        "bpn": [
          "BPNL00000003AXS3"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model",
          "delete_semantic_model",
          "add_semantic_model",
          "update_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b74ce4aa-5936-40b5-b81b-a0326eb7e110",
      "createdTimestamp": 1654844003153,
      "username": "service-account-sa-cl6-cx-14",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-14",
      "attributes": {
        "bpn": [
          "BPNL00000003AVTH"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "9ea82701-4187-41a4-aad0-28be083d33ae",
      "createdTimestamp": 1658820742562,
      "username": "service-account-sa-cl6-cx-16",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-16",
      "attributes": {
        "bpn": [
          "BPNL00000003BR79"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "951fb175-5761-451e-9bba-a96ed9945511",
      "createdTimestamp": 1659387083025,
      "username": "service-account-sa-cl6-cx-17",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-17",
      "attributes": {
        "bpn": [
          "BPNL00000003B3NX"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "150315dd-bfbc-40eb-a539-819db115fe2d",
      "createdTimestamp": 1659470433154,
      "username": "service-account-sa-cl6-cx-18",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-18",
      "attributes": {
        "bpn": [
          "BPNL00000003CNKC"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "ebf26a6b-f24e-4d97-96ae-2aca92b4ed50",
      "createdTimestamp": 1659529335924,
      "username": "service-account-sa-cl6-cx-19",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-19",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "d6df2c49-804c-4b3e-afa5-b286c73d2428",
      "createdTimestamp": 1651729457029,
      "username": "service-account-sa-cl6-cx-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-2",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2cafc897-a180-4577-8dbd-6e45a86ec3e3",
      "createdTimestamp": 1659609598988,
      "username": "service-account-sa-cl6-cx-20",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-20",
      "attributes": {
        "bpn": [
          "BPNL00000000BJTL"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f52db6b1-567a-453f-9e40-1e2cf1dee59c",
      "createdTimestamp": 1660194219883,
      "username": "service-account-sa-cl6-cx-21",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-21",
      "attributes": {
        "bpn": [
          "BPNL00000003BR79"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model",
          "add_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "025bcf1a-c6b2-48b1-9d62-9699d3320f36",
      "createdTimestamp": 1660242782083,
      "username": "service-account-sa-cl6-cx-22",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-22",
      "attributes": {
        "bpn": [
          "BPNL000000002YWC"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "939b76fa-544d-417f-9de8-f87aec1a3bd1",
      "createdTimestamp": 1660242891211,
      "username": "service-account-sa-cl6-cx-23",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-23",
      "attributes": {
        "bpn": [
          "BPNL00000002HCQ9"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "da89aae0-bde8-4f01-8a4b-86a176d30ac7",
      "createdTimestamp": 1660242966983,
      "username": "service-account-sa-cl6-cx-24",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-24",
      "attributes": {
        "bpn": [
          "BPNL00000002HCQ9"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "51097613-12ba-439c-ac2c-f62f0c8f6c42",
      "createdTimestamp": 1667856026656,
      "username": "service-account-sa-cl6-cx-25",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-25",
      "attributes": {
        "bpn": [
          "BPNL00000000DFHO"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User",
          "App Tech User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "049a47fa-e8dd-47ae-9cdb-34a8130af935",
      "createdTimestamp": 1667856124971,
      "username": "service-account-sa-cl6-cx-26",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-26",
      "attributes": {
        "bpn": [
          "BPNL00000000BSNC"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User",
          "App Tech User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f96f772a-cc47-495d-ae00-0ecae173a850",
      "createdTimestamp": 1667856184068,
      "username": "service-account-sa-cl6-cx-27",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-27",
      "attributes": {
        "bpn": [
          "BPNL00000003AZQP"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "e82b5ab1-7763-47e0-bf9a-a9103368d0a1",
      "createdTimestamp": 1667856242451,
      "username": "service-account-sa-cl6-cx-28",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-28",
      "attributes": {
        "bpn": [
          "BPNL00000003AZQP"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User",
          "App Tech User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "431bd39d-f04d-4b99-a1ce-dc972b7f61b2",
      "createdTimestamp": 1667856297338,
      "username": "service-account-sa-cl6-cx-29",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-29",
      "attributes": {
        "bpn": [
          "BPNL000000000000"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User",
          "App Tech User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "98d03ed3-02e2-4643-81c4-a011f0d47a6d",
      "createdTimestamp": 1651729671532,
      "username": "service-account-sa-cl6-cx-3",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-3",
      "attributes": {
        "bpn": [
          "BPNL00000003AYRE"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "eefdb17a-b59e-41c1-99db-a563c6e2a1dc",
      "createdTimestamp": 1668590975255,
      "username": "service-account-sa-cl6-cx-30",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-30",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "50c19120-550c-429a-b45c-fb402046d4be",
      "createdTimestamp": 1651729685848,
      "username": "service-account-sa-cl6-cx-4",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-4",
      "attributes": {
        "bpn": [
          "BPNL00000003B2OM"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6d0098ce-e569-4bff-a61e-c721dd7d5da7",
      "createdTimestamp": 1651729695554,
      "username": "service-account-sa-cl6-cx-5",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-5",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "330c164f-98db-4566-8135-e45e3ec1d0f3",
      "createdTimestamp": 1651729708123,
      "username": "service-account-sa-cl6-cx-6",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-6",
      "attributes": {
        "bpn": [
          "BPNL00000003B0Q0"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b0297640-9074-4003-adb9-cbf9f23409a7",
      "createdTimestamp": 1651729730658,
      "username": "service-account-sa-cl6-cx-8",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-8",
      "attributes": {
        "bpn": [
          "BPNL00000003B5MJ"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "Connector User"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2c5e74e2-0561-46f9-b27e-beadb44f1f75",
      "createdTimestamp": 1651613503558,
      "username": "service-account-sa-cl6-cx-9",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-9",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "view_company_data"
        ],
        "technical_roles_management": [
          "Connector User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ],
        "Cl20-CX-IRS": [
          "view_irs"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b1d71881-2aa8-4a67-b8ce-c101d6290832",
      "createdTimestamp": 1657541056572,
      "username": "service-account-sa-cl7-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "view_company_data"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1e60cc6d-17cd-442c-ace7-ec94067c5f85",
      "createdTimestamp": 1658900179675,
      "username": "service-account-sa-cl7-cx-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-2",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "view_company_data"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "8d63cb9f-2df5-42b6-9bc8-a61b8d5467cb",
      "createdTimestamp": 1664293185323,
      "username": "service-account-sa-cl7-cx-3",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-3",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "add_company_data",
          "view_company_data"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "14a0d303-0b9f-4469-830f-4d1221b796d4",
      "createdTimestamp": 1664293263973,
      "username": "service-account-sa-cl7-cx-4",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-4",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "view_company_data"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f014ed5d-9e05-4f29-a5c0-227c7e7b479e",
      "createdTimestamp": 1670157703230,
      "username": "service-account-sa-cl7-cx-5",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-5",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl16-CX-BPDMGate-Portal": [
          "view_company_data",
          "view_shared_data",
          "update_company_data"
        ],
        "Cl7-CX-BPDM": [
          "add_company_data",
          "view_company_data"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "07e82331-df27-4916-b5ef-0642aefb198a",
      "createdTimestamp": 1677840583068,
      "username": "service-account-sa-cl7-cx-6",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-6",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl7-CX-BPDM": [
          "view_company_data"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "26928428-c0db-4697-88c5-88a33971c8ec",
      "createdTimestamp": 1679570125131,
      "username": "service-account-sa-cl7-cx-7",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl7-cx-7",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "BPDM Management",
          "BPDM Partner Gate"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "dcb9a153-e1b4-4fac-bc51-7032023e9db9",
      "createdTimestamp": 1675867052982,
      "username": "service-account-sa-cl8-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl8-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "add_self_descriptions"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2da67801-addd-4acb-a6b5-71a82ca050d1",
      "createdTimestamp": 1651730995929,
      "username": "service-account-sa-clx-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-clx-cx-1",
      "attributes": {
        "bpn": [
          "BPNL00000003AZQP"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "312a863c-dfa0-4445-97f8-e11fed985b0a",
      "createdTimestamp": 1655449440789,
      "username": "service-account-sa-clx-cx-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-clx-cx-2",
      "attributes": {
        "bpn": [
          "BPNL00000003AZQP"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "technical_roles_management": [
          "App Tech User"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model",
          "add_semantic_model"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "5a1ecaf3-ed06-42bd-8c43-25db90b5a91e",
      "createdTimestamp": 1673212847656,
      "username": "service-account-sap-login",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "SAP-Login",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "34cac52a-09bf-443f-b803-b09d581f57fa",
      "createdTimestamp": 1689164772757,
      "username": "service-account-sa_testautomation",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa_testAutomation",
      "attributes": {
        "bpn": [
          "BPNL00000003CRHK"
        ]
      },
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "add_wallets",
          "update_wallets",
          "add_wallet",
          "view_wallets"
        ],
        "technical_roles_management": [
          "Identity Wallet Management"
        ],
        "Cl2-CX-Portal": [
          "view_client_roles",
          "add_self_descriptions"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id" : "01b02e4f-1c16-437e-9555-9bbcfe4bade3",
      "createdTimestamp" : 1652788086549,
      "username" : "c3819cfb-72c2-45bf-9666-895af2e7fc19",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Tester",
      "lastName" : "Onboarding Provider",
      "email" : "onboarding-provider@osp.com",
      "attributes" : {
        "bpn" : [ "BPNL000000001OSP" ],
        "organisation" : [ "Onboarding-Provider" ]
      },
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "federatedIdentities" : [ {
        "identityProvider" : "Onboarding-Provider",
        "userId" : "c5e606f8-0808-42ba-b285-74debb9d8335",
        "userName" : "onboarding-provider@osp.com"
      } ],
      "realmRoles" : [ "default-roles-catena-x realm" ],
      "clientRoles" : {
        "Cl2-CX-Portal" : [ "Company Admin" ]
      },
      "notBefore" : 0,
      "groups" : [ ]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "Cl16-CX-BPDMGate-Portal": [
      {
        "client": "sa-cl7-cx-5",
        "roles": [
          "update_company_data",
          "view_shared_data",
          "view_company_data"
        ]
      }
    ],
    "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com": [
      {
        "client": "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com",
        "roles": [
          "EC.Buyer.Manager",
          "EarthCommerce.Content.Manager",
          "EarthCommerce.AdministratorRC_QAS2",
          "CE.Dismantler.Leader",
          "CE.Dismantler.View",
          "EarthCommerce.Advanced.BuyerRC_QAS2",
          "EarthCommerce.UserRC_QAS2",
          "EarthCommerce.Content.ManagerRC_QAS2",
          "EarthCommerce.Buyer",
          "CE.Dismantler.Purchase",
          "EarthCommerce.BuyerRC_QAS2",
          "EC.Buyer.buy"
        ]
      }
    ],
    "Cl7-CX-BPDM": [
      {
        "client": "sa-cl7-cx-5",
        "roles": [
          "delete_company_data",
          "add_company_data",
          "view_company_data"
        ]
      }
    ],
    "Cl5-CX-Custodian": [
      {
        "client": "sa-cl5-custodian-1",
        "roles": [
          "delete_wallets",
          "update_wallets",
          "view_wallets",
          "add_wallets"
        ]
      },
      {
        "client": "sa-cl5-custodian-2",
        "roles": [
          "delete_wallet",
          "delete_wallets",
          "update_wallets",
          "add_wallet",
          "update_wallet",
          "view_wallets",
          "view_wallet",
          "add_wallets"
        ]
      },
      {
        "client": "sa-cl5-custodian-3",
        "roles": [
          "delete_wallet",
          "delete_wallets",
          "update_wallets",
          "add_wallet",
          "update_wallet",
          "view_wallets",
          "view_wallet",
          "add_wallets"
        ]
      },
      {
        "client": "sa-cl5-custodian-4",
        "roles": [
          "delete_wallet",
          "delete_wallets",
          "update_wallets",
          "add_wallet",
          "update_wallet",
          "view_wallets",
          "view_wallet",
          "add_wallets"
        ]
      },
      {
        "client": "sa-cl5-custodian-internaltest",
        "roles": [
          "delete_wallets",
          "update_wallets",
          "view_wallets",
          "add_wallets"
        ]
      }
    ],
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ],
    "Cl2-CX-Portal": [
      {
        "client": "sa-cl2-01",
        "roles": [
          "update_application_checklist_value"
        ]
      },
      {
        "client": "sa-cl2-02",
        "roles": [
          "update_application_checklist_value"
        ]
      },
      {
        "client": "sa-cl8-cx-1",
        "roles": [
          "add_self_descriptions"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "60313b78-e131-4358-9817-163ee938cc59",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/CX-Central/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/CX-Central/account/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "edb1e627-426a-4593-93c0-e9b4bc45c4d6",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/CX-Central/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/CX-Central/account/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "62ea7826-6e5b-4200-8f5b-ff69b672d0a3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "dc24237b-46fa-418b-a806-24d371e4385a",
          "name": "idp mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "idp",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "38d072af-d85b-4b39-ad55-13ed5ce45791",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "03885031-084a-4317-aa51-de9b4acf8fa9",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b5e613bb-37a8-4e46-ae8a-64df3269dd3c",
      "clientId": "Cl10-CX-BPDMShare",
      "description": "BPDM Sharing Member Client for Cleanup Pipeline",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://partners-gate-pen.dev.demo.catena-x.net/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
      "clientId": "Cl11-ADAC-Fleet",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "https://dtc-translator.adac.openresearch.com/*",
        "https://fleet-pen.dev.adac.openresearch.com/*",
        "https://dtc-pen.dev.adac.openresearch.com/*",
        "https://fleet-management.adac.openresearch.com/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "367fc1b7-4b13-4d8e-8090-e7463b18a295",
          "name": "organisation-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organisation",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organisation",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52ef5f31-c541-45bd-b4c4-8fbf6f74e0bd",
          "name": "tenant-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "tenant",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        },
        {
          "id": "39b09e63-d335-42e3-a8e1-37ca2101f146",
          "name": "audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl11-ADAC-Fleet",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2a82462c-5745-43bb-859c-f5a2e74611de",
      "clientId": "Cl12-CX-TestManager",
      "name": "Testdaten-Manager",
      "description": "Testdaten Manager SSO",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dd6a7d43-a7b1-4808-90dd-e446b51b59f2",
      "clientId": "Cl13-CX-Battery",
      "description": "BatteryPass App - central hosted app",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://materialpass-pen.dev.demo.catena-x.net/*",
        "http://localhost:8080/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "a46ae678-a72c-4513-a5da-29aa773e058d",
          "name": "Company-Role",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "aggregate.attrs": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "companyRole",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "companyRole",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0cabe6af-0943-48ef-84cf-507a5b162aab",
      "clientId": "Cl15-BOSCH-AFQM",
      "rootUrl": "",
      "baseUrl": "https://portal-staging.afqm-services.com/postLogin",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://portal-staging.afqm-services.com/postLogin"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f864e14f-5f27-4d1d-8f91-2d2a983e163c",
      "clientId": "Cl15-CX-DFT",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://dft-pen.dev.demo.catena-x.net/*",
        "https://dft.pen.int.demo.catena-x.net/*",
        "http://localhost:3000/*",
        "http://dft-pen-dev.germanywestcentral.cloudapp.azure.com:8080/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "c6aa405c-6db3-4b1c-add9-d6d775e44b1d",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "113242f5-b582-44a5-9f83-2fd85c0772c8",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "52f90723-b4c1-44c3-bef2-fd8ebe59ae6c",
      "clientId": "Cl16-CX-BPDMGate",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://partners-gate-pen.dev.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "17cdc8bc-0081-4fbd-8d28-969881e68507",
      "clientId": "Cl16-CX-BPDMGate-Portal",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://portal-gate-pen.dev.demo.catena-x.net/"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9767ac38-506a-4d20-aeb7-0e40cd00e908",
      "clientId": "Cl16-CX-CRisk",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "http://localhost:3000/*",
        "https://country-risk-dashboard-pen.dev.demo.catena-x.net/*",
        "https://vas-country-risk-backend-pen.dev.demo.catena-x.net/swagger-ui/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3fa6ca31-a78a-4202-89ae-f09411156eb9",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a9039faf-50e6-46d9-b697-c9154f61091e",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6493bcd5-a1ee-47f0-bec3-a1436f4d8b10",
      "clientId": "Cl17-CX-Part",
      "description": "Part Chain App - not 3rd Party managed, directly managed by CX",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://traceability-portal-e2e-b-pen.dev.demo.catena-x.net/*",
        "https://traceability-portal-pen.dev.demo.catena-x.net/*",
        "http://localhost:4200/*",
        "https://traceability-portal-pen-dev-a-pen.dev.demo.catena-x.net/*",
        "https://traceability-portal-pen-dev-b-pen.dev.demo.catena-x.net/*",
        "https://traceability-portal-test-pen.dev.demo.catena-x.net/*",
        "https://traceability-portal-e2e-a-pen.dev.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "c0b82ec1-f59a-4100-aa60-5b9402e05b99",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "18876433-abec-4c67-80f5-f29974c9cd82",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "77d56420-d8d8-4eab-9af0-6b6bb27de356",
      "clientId": "Cl18-CX-Pal",
      "description": "Palantir App Performance Monitor",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://catena-x.palantirfoundry.com/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "fde6064e-e2f6-4f09-a08d-1347ced3e34b",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "f135c8dd-5cdf-47cc-bfd4-b4c544d8b842",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
      "clientId": "Cl1-CX-Registration",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://portal-pen.dev.demo.catena-x.net/*",
        "http://localhost:3000/*",
        "https://portal-rc-pen.dev.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "71f9d485-62aa-41c2-a491-bcb47c447121",
          "name": "idp mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "tenant",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4c180350-8f09-4eed-88f4-4b003a6b5fd1",
          "name": "organisation-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organisation",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organisation",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2b1dfde9-aff2-406b-b258-edbf574fc4dd",
          "name": "audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl1-CX-Registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c154b82c-c760-4da5-8b27-7f45b39259e6",
      "clientId": "Cl20-CX-IRS",
      "description": "Decentral IRS Component for Traceability and CE Apps",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bf1cfe3e-3950-4fdc-8a58-13b73cec6740",
      "clientId": "Cl21-CX-DF",
      "description": "Client for Asset Discovery Service",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "48fc6e9e-a736-4b0b-9fea-59ad847b02e0",
      "clientId": "Cl22-CX-BPND",
      "description": "Client for Business Partner Discovery Service",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
      "clientId": "Cl2-CX-Portal",
      "name": "",
      "description": "",
      "rootUrl": "https://portal-pen.dev.demo.catena-x.net/home",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://portal-swagger-pen.dev.demo.catena-x.net/*",
        "https://portal-pen.dev.demo.catena-x.net/*",
        "http://localhost:8080/*",
        "https://partners-pool-pen.dev.demo.catena-x.net/*",
        "https://catenax-bpdm-pen-dev.demo.catena-x.net/*",
        "http://localhost:3000/*",
        "https://portal-rc-pen.dev.demo.catena-x.net/*",
        "https://partners-gate-pen.dev.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "35d0aa44-dd27-4dbd-8f3a-7047ae461fdd",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl1-CX-Registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e97b646a-3753-4da5-b6f7-3a2860741b20",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl2-CX-Portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
      "clientId": "Cl3-CX-Semantic",
      "rootUrl": "",
      "adminUrl": "https://portal-pen.dev.demo.catena-x.net/home",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://portal-pen.dev.demo.catena-x.net/*",
        "http://localhost:8080/*",
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "1de1f28c-00d2-42b6-bc74-e57d8e73f7df",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "faf297ed-30d7-4e15-8051-40c540c14604",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
      "clientId": "Cl5-CX-Custodian",
      "name": "Cl5-CX-Custodian PEN",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://managed-identity-wallets-pen.dev.demo.catena-x.net/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "token.endpoint.auth.signing.alg": "RS256",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6f273a17-cf91-43dc-9dac-4ec36250d133",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7a4001a7-aeaf-419c-ae46-6a190bc5e13f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9fd2abb2-445e-4622-a068-e3d48eb97634",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "roles"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "28273f37-cff9-44c3-9731-2a7a63025d28",
      "clientId": "Cl6-CX-DAPS",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "2b2e7bb5-36bc-4987-9898-9525b66a2974",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl1-CX-Registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "bb04a584-6f4a-4172-a4ed-f0c228005689",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl2-CX-Portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "04cd6d38-674f-4588-980a-8f120bddcc44",
      "clientId": "Cl7-CX-BPDM",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://partners-pool-pen.dev.demo.catena-x.net/*",
        "https://catenax-bpdm-pen-dev.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3fbe1a86-143d-4d52-8138-01aa23875664",
      "clientId": "Cl9-CDQ-Fraud",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://fraud-dashboard-pen.dev.demo.catena-x.net/*",
        "https://keycloak.catenax-cdq.com/auth/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6a9209c2-ec16-476b-9a9f-61474610b790",
      "clientId": "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-pen-dev-dismantler-s66pftcc.aws-live-eu10"
      ],
      "webOrigins": [
        "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIDQjCCAiqgAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMFgxVjBUBgNVBAMMTWh0dHBzOi8vY2F0ZW5heC1pbnQtZGlzbWFudGxlci1zNjZwZnRjYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBYMVYwVAYDVQQDDE1odHRwczovL2NhdGVuYXgtaW50LWRpc21hbnRsZXItczY2cGZ0Y2MuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKVD5SYVIsC3M8PqMuiw/IMypyZU0V5pUwxBaZlMWljz1D1iNPGaOg9LhhLGAWOD0cdfFs70Q4Ov391raGRn5/9cQma0dJtH1PiTMM67+FZFvn1FWeEJ5a3qwIgoQrcDZn9NDTmtL+yaYOAsg5SGEkjrOZlJp1U3xVZDmuToUZ96WDodsy/nVQTkvaORSh+XDPIQ3sH5jqFdFuQsWf3xXSFHobF1sbi2IjGSZxLEi9yszPVff999Q0Q86kAoCh5gVKdB3WSHgkzDD6gxlcIGGQM6y3HZigIKlPRwK1o3SrEvl0IbPKDNM6rtFgWwRfp5KsQLRfe7TxLq7IWkqQd29vcCAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAoScTGCrzKq4bbYFTJcyKwtgL80OM7RgZlfSsP/+k7fiZKUaY6WbUKDwRl7yHglgjL6NiC/Tz1PklgbB08RMwXIHbnG4VvdpcMUlHn5wGfZnNViHZYsjb4TgK8QS/zD8CSaJguUuK0ym/KUT9Hn6bHQuk4CQICVZmlp1N/bIWoSinY565rZ1amg9Ap0sgy1wWuqH8zKeTClrxjbuQeRTyj7d4kb/Ocg12rrUP8dznS5SGiR7WL9LpVrJZH72cKuOM1dYV6O94KH9uiuMe+VoUxWqgHiYbA/LOCxLSgI2fVTG8cGz0bCviFSf2tfVEB8mi/cU2Ikz6LzGNdaEpr4NoaA==",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "true",
        "saml_single_logout_service_url_post": "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-pen-dev-dismantler-s66pftcc.aws-live-eu10",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-pen-dev-dismantler-s66pftcc.aws-live-eu10",
        "saml.server.signature": "true",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "ZGMZhC4yxOKbOI3azIQQxCjXbLw=",
        "saml.artifact.binding": "false",
        "saml_single_logout_service_url_redirect": "https://catenax-pen-dev-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-pen-dev-dismantler-s66pftcc.aws-live-eu10",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIDQjCCAiqgAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMFgxVjBUBgNVBAMMTWh0dHBzOi8vY2F0ZW5heC1pbnQtZGlzbWFudGxlci1zNjZwZnRjYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBYMVYwVAYDVQQDDE1odHRwczovL2NhdGVuYXgtaW50LWRpc21hbnRsZXItczY2cGZ0Y2MuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKVD5SYVIsC3M8PqMuiw/IMypyZU0V5pUwxBaZlMWljz1D1iNPGaOg9LhhLGAWOD0cdfFs70Q4Ov391raGRn5/9cQma0dJtH1PiTMM67+FZFvn1FWeEJ5a3qwIgoQrcDZn9NDTmtL+yaYOAsg5SGEkjrOZlJp1U3xVZDmuToUZ96WDodsy/nVQTkvaORSh+XDPIQ3sH5jqFdFuQsWf3xXSFHobF1sbi2IjGSZxLEi9yszPVff999Q0Q86kAoCh5gVKdB3WSHgkzDD6gxlcIGGQM6y3HZigIKlPRwK1o3SrEvl0IbPKDNM6rtFgWwRfp5KsQLRfe7TxLq7IWkqQd29vcCAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAoScTGCrzKq4bbYFTJcyKwtgL80OM7RgZlfSsP/+k7fiZKUaY6WbUKDwRl7yHglgjL6NiC/Tz1PklgbB08RMwXIHbnG4VvdpcMUlHn5wGfZnNViHZYsjb4TgK8QS/zD8CSaJguUuK0ym/KUT9Hn6bHQuk4CQICVZmlp1N/bIWoSinY565rZ1amg9Ap0sgy1wWuqH8zKeTClrxjbuQeRTyj7d4kb/Ocg12rrUP8dznS5SGiR7WL9LpVrJZH72cKuOM1dYV6O94KH9uiuMe+VoUxWqgHiYbA/LOCxLSgI2fVTG8cGz0bCviFSf2tfVEB8mi/cU2Ikz6LzGNdaEpr4NoaA==",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "d794f802-ba70-4741-b130-7c0fdbfa5d79",
          "name": "role",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "true",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ],
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
      "clientId": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com",
      "name": "Cl10-SAP-CE",
      "description": "SAP CE App - currently named as Circular Economy SAP (https://dismantler-cockpit.d13fe27.kyma.ondemand.com)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://ec-qas.d13fe27.kyma.ondemand.com/*",
        "https://dismantler-cockpit.d13fe27.kyma.ondemand.com/*"
      ],
      "webOrigins": [
        "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIDIDCCAgigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMEcxRTBDBgNVBAMMPGh0dHBzOi8vY2F0ZW5heC1kdC1yZWMuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTAgFw0xNjAxMDEwMDAwMDBaGA8yMDUwMDEwMTAwMDAwMFowRzFFMEMGA1UEAww8aHR0cHM6Ly9jYXRlbmF4LWR0LXJlYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAubgGM9U3mgkLahIJ6M2LImFIcoLPXaCD+aw4hi68grZ89T5HGpqDtgxdvzVqnjJ1Qam0IUWRcu7XPACVOp6Ez3u2CzvjBlrW9gQbXbTl3urv8QTAmBDzO/F4tG0GInf5DyI6ln+HV6lgtCUEdBv9xmoGdlvM0rY1RTebmRU89kqL4NixdKDA5f7lt+geZZm+tQrxfpTapXRC5Bkg6b6TA5Hk4YhgiKfV/muuB9WJnhhovC8nqswqQEGm8+HZ9/7mPCG82x7z9I1c/XY2RR8JNxNd9UYgd87mdp3A395YZ121d2bI8gNDCEr+hirHFigH+F3oPs6Q4BwY/rvWnjVKfwIDAQABoxAwDjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAiiqpIbv8gsoPr2vnW1LSuWKp8nQHMpn6eWtqmbu3QRXKzcgNelveycWNWAT94Of0/qPsbtBTbzDSlj+wmh1sd8vBEfce5vsVAf2CfTC8djAKL8HFJSRPB1Hn49WfS+TflOo0B+8SGV51THQwJm7KdT9kNOaXJWuLgmOWY4q7JurTEbOzTke4OvWGy2Ag/uOaY6mxmoTcLLajOJQMTIXnLba+ggXLD4/4jWY1r3s5wzcwfTKcGigH2PpsPGmqjUPcM0Qh0UiD+UCiAgyAuOIRh1trpGXRJ3dBsC7y6W4hK0igU4zP4KpjLh1dLEgCnbUVI5dIlVVq0YQ6jj+TOGDBG",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "true",
        "saml_single_logout_service_url_post": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-dt-rec.aws-live-eu10",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-dt-rec.aws-live-eu10",
        "saml.server.signature": "true",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "2ci7fiekIgS7KD2EZj7CfJjNXoY=",
        "saml.artifact.binding": "false",
        "saml_single_logout_service_url_redirect": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-dt-rec.aws-live-eu10",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIDIDCCAgigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMEcxRTBDBgNVBAMMPGh0dHBzOi8vY2F0ZW5heC1kdC1yZWMuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTAgFw0xNjAxMDEwMDAwMDBaGA8yMDUwMDEwMTAwMDAwMFowRzFFMEMGA1UEAww8aHR0cHM6Ly9jYXRlbmF4LWR0LXJlYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAubgGM9U3mgkLahIJ6M2LImFIcoLPXaCD+aw4hi68grZ89T5HGpqDtgxdvzVqnjJ1Qam0IUWRcu7XPACVOp6Ez3u2CzvjBlrW9gQbXbTl3urv8QTAmBDzO/F4tG0GInf5DyI6ln+HV6lgtCUEdBv9xmoGdlvM0rY1RTebmRU89kqL4NixdKDA5f7lt+geZZm+tQrxfpTapXRC5Bkg6b6TA5Hk4YhgiKfV/muuB9WJnhhovC8nqswqQEGm8+HZ9/7mPCG82x7z9I1c/XY2RR8JNxNd9UYgd87mdp3A395YZ121d2bI8gNDCEr+hirHFigH+F3oPs6Q4BwY/rvWnjVKfwIDAQABoxAwDjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAiiqpIbv8gsoPr2vnW1LSuWKp8nQHMpn6eWtqmbu3QRXKzcgNelveycWNWAT94Of0/qPsbtBTbzDSlj+wmh1sd8vBEfce5vsVAf2CfTC8djAKL8HFJSRPB1Hn49WfS+TflOo0B+8SGV51THQwJm7KdT9kNOaXJWuLgmOWY4q7JurTEbOzTke4OvWGy2Ag/uOaY6mxmoTcLLajOJQMTIXnLba+ggXLD4/4jWY1r3s5wzcwfTKcGigH2PpsPGmqjUPcM0Qh0UiD+UCiAgyAuOIRh1trpGXRJ3dBsC7y6W4hK0igU4zP4KpjLh1dLEgCnbUVI5dIlVVq0YQ6jj+TOGDBG",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "db86018e-b8d1-4b71-a377-ef3733201db7",
          "name": "X500 surname",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "lastName",
            "friendly.name": "surname",
            "attribute.name": "urn:oid:2.5.4.4"
          }
        },
        {
          "id": "4ea0328c-2a90-4202-935e-cf811d9a12aa",
          "name": "X500 givenName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "firstName",
            "friendly.name": "givenName",
            "attribute.name": "urn:oid:2.5.4.42"
          }
        },
        {
          "id": "41421449-b7eb-42ef-8410-9b7506d4b709",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "true",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "99cd3fe6-148e-438b-8f06-1345bf6c7e62",
          "name": "X500 email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "urn:oid:1.2.840.113549.1.9.1"
          }
        },
        {
          "id": "0ea4e3df-487f-475a-9945-3bf0849b99e1",
          "name": "organisation-mapper",
          "protocol": "saml",
          "protocolMapper": "saml-user-attribute-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "organisation",
            "attribute.name": "organisation"
          }
        },
        {
          "id": "5b964b1e-d4ef-4de4-a99f-0d03edd811d2",
          "name": "tenant-mapper",
          "protocol": "saml",
          "protocolMapper": "saml-user-attribute-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "tenant",
            "attribute.name": "tenant"
          }
        }
      ],
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "2d1e3584-9954-4b7f-a58b-8820ca390799",
      "clientId": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com",
      "description": "SAP LBN-MT App - Contact: Lukas Hudelmayer",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SSO/alias/pt-demo-owner-1lusu8r1.aws-live-eu10"
      ],
      "webOrigins": [
        "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIDMDCCAhigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAME8xTTBLBgNVBAMMRGh0dHBzOi8vcHQtZGVtby1vd25lci0xbHVzdThyMS5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBPMU0wSwYDVQQDDERodHRwczovL3B0LWRlbW8tb3duZXItMWx1c3U4cjEuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIqpBnFGA0I71WMMxq5LunHwgNbgNNRHZjWy6YPNW1uJjbSbVC1TgMlgbXi36tD8T3HG7/LzHpIYqqJGj9Qd+nCP+ThGa6Q8oy3x3ddJ4FoyPjiwVMElllLvEnv+4+8hOKJFiwRZfdLl+oCQEzHFtR3SbnvSFIJsBEn7zQrITlL91OtrNmm6j1nGs6cUi2zOXet98aZWsXB1p5FiM68JQzrq2crPgqVYNNzrxTJhZay7POgWKDmlm44ck5YOP3dtfkyCIGv63QmeXW+9IT6EWODrqFbaapXKCRS70FJLk2safXN0Hgqe3L+tv/vKYHqVCvsbFztnd9OEJVfDB+1IAQECAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAUm+aIfaismCLvfNCwU1nT422c+lfYlQnY/VndsihksddXZvbTLb0WXZ0+6NBvI9q0ZOee65mr7kNGGyvR52nSDxDoDCXRhHK4yNUbl6LVJ7ZNibif3ItmK+GaHilJ1oG/mi8ucvyTT+BGBsHfvjbB+RLSVzr/t0exhhmVHy/buR54efvmolBuWFggsUa2qeP2mXWmUHW4GptmniLbIIYClGzbG0QIDutcSmxqoxwlywS2PJerwAxgdjx3gcv49ZCTnFfL+ZTp78dpu4XjXbI0BNymJXDomCj4lpQPuqWsVKWrJh99e+pptUbpSzsBaQxJQmA3V32YLFEprEqB00q0Q==",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "true",
        "saml_single_logout_service_url_post": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/pt-demo-owner-1lusu8r1.aws-live-eu10",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SSO/alias/pt-demo-owner-1lusu8r1.aws-live-eu10",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "r91TMnkHpA3L0JRpDA+YsBpF+fg=",
        "saml.artifact.binding": "false",
        "saml_single_logout_service_url_redirect": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/pt-demo-owner-1lusu8r1.aws-live-eu10",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIDMDCCAhigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAME8xTTBLBgNVBAMMRGh0dHBzOi8vcHQtZGVtby1vd25lci0xbHVzdThyMS5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBPMU0wSwYDVQQDDERodHRwczovL3B0LWRlbW8tb3duZXItMWx1c3U4cjEuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIqpBnFGA0I71WMMxq5LunHwgNbgNNRHZjWy6YPNW1uJjbSbVC1TgMlgbXi36tD8T3HG7/LzHpIYqqJGj9Qd+nCP+ThGa6Q8oy3x3ddJ4FoyPjiwVMElllLvEnv+4+8hOKJFiwRZfdLl+oCQEzHFtR3SbnvSFIJsBEn7zQrITlL91OtrNmm6j1nGs6cUi2zOXet98aZWsXB1p5FiM68JQzrq2crPgqVYNNzrxTJhZay7POgWKDmlm44ck5YOP3dtfkyCIGv63QmeXW+9IT6EWODrqFbaapXKCRS70FJLk2safXN0Hgqe3L+tv/vKYHqVCvsbFztnd9OEJVfDB+1IAQECAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAUm+aIfaismCLvfNCwU1nT422c+lfYlQnY/VndsihksddXZvbTLb0WXZ0+6NBvI9q0ZOee65mr7kNGGyvR52nSDxDoDCXRhHK4yNUbl6LVJ7ZNibif3ItmK+GaHilJ1oG/mi8ucvyTT+BGBsHfvjbB+RLSVzr/t0exhhmVHy/buR54efvmolBuWFggsUa2qeP2mXWmUHW4GptmniLbIIYClGzbG0QIDutcSmxqoxwlywS2PJerwAxgdjx3gcv49ZCTnFfL+ZTp78dpu4XjXbI0BNymJXDomCj4lpQPuqWsVKWrJh99e+pptUbpSzsBaQxJQmA3V32YLFEprEqB00q0Q==",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "06a1dc24-c230-4298-b24f-7b509c16b585",
          "name": "role",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "true",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ],
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "213ea3ce-b036-405f-8abd-3ee08ff72857",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "35134e77-f548-4b87-970c-cc0626496fcd",
      "clientId": "sa-beta-cx1",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "07f8b416-f24d-4cba-91f8-fd3ae0af4657",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "72681be8-4baf-475d-a9b9-47dee5326981",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2ac54aee-ac44-4a48-ae4a-bbdb5288c7f9",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7cb8edc7-02f4-4c7c-84b4-b91cbac2d5e4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b9ee94c4-f8de-40ba-8ea0-36d3ca28d3b5",
      "clientId": "sa-beta-cx2",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "296af6dd-9c38-41f4-b485-5f5eea375ccc",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e00b42b8-8bcc-4b18-9999-86212378c5b1",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "24194317-3f62-417a-8442-62009cbf029e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ab7d3b61-de21-4527-b021-7b2d75182fee",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "624a56df-7370-46f6-b00f-44791184bb28",
      "clientId": "sa-beta-cx3",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "09c3a032-eab0-4f2c-96df-b7c1b13d3634",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "62d698d8-24d6-4b3a-b533-c4bffdb65db1",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2a1ab4a4-c250-49e0-9676-86564dea3062",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f5071021-acc5-42be-98e1-8bccd62e8f1b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fb3deae9-5f34-4e9d-9a33-376f083f03c4",
      "clientId": "sa-beta-cx4",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "daf63cfb-4e69-43f3-9c4e-7c9f91131364",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "53742f0f-0df2-4f2f-b6bd-e407d4bd0894",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "343fe132-c419-484d-a7f7-a2316f855cec",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "15332471-4d69-48fa-9bab-e51218faa13d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8b05ebaa-0fa1-45fc-bc5c-8d75e2fa8166",
      "clientId": "sa-beta-cx5",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "4c831a50-2f22-407f-ac33-3b5bc19d824b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "764d1b6f-ecc1-46b7-8feb-e962fe8facd5",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "df7255f2-200f-4ebb-94bb-7edf96e2e127",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b421ee98-98c8-41e2-8594-646b9ac40c67",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "062617f4-5efb-4f85-932f-26193737321e",
      "clientId": "sa-beta-cx6",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "86a03690-8af2-4c80-ba47-94d05fc1cc47",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8657ab97-ddb1-4775-8d44-a3ccbfea213f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6543b216-4e97-4dd9-a855-021de0d8b316",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b167ce59-73d8-4f6c-a175-5cc742526628",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2b1424ac-3e67-42c7-be77-69aa57fe0834",
      "clientId": "sa-beta-cx7",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "965eb625-e855-49f4-bb55-c0d73666d410",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "581a3217-3127-4484-a4c7-1491371a7b48",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cf552528-6cb5-43a5-91c9-aac399e96730",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ba208341-0e41-4dea-8397-619376833c3a",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c33cfdab-5838-4c38-bd84-15b63502d604",
      "clientId": "sa-cl10-cx-1",
      "description": "Technical user created for Sharing Member to connect to BPDM  (SPOC: Manuel Niedermann, Nico Koprowski)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "429be913-0d7c-4bb1-b429-ed7b18822645",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "087541f4-ff7a-4d0f-bbc6-cdab00bb9c95",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d13abc34-92f7-4b7f-8684-f923f5798627",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7e7b246a-f1f6-4816-a6ad-b0b62a8918d7",
      "clientId": "sa-cl16-cx-1",
      "description": "Technical user created for BPDM Partner Gate (SPOC: Nico Koprowski)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ded924f4-4b1b-4607-b86b-c14a39f93103",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2722c105-eb0a-4af2-85c6-13499e443d99",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c1c10e38-57c3-46d3-b49a-7c9391264027",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5a220510-4a8e-4cbc-a47e-6f549e6c3894",
      "clientId": "sa-cl1-cx-1",
      "description": "Service Account for Invicti DAST scan",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "24320d24-0e73-478f-8e09-a05dc4bb7c35",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "caea604c-1e8e-48ad-91a8-18711e4fb564",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ea2580a2-1594-43c2-88e6-36e9e1315263",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cdf11dff-530a-4fd4-97b9-84e4d60ac21e",
      "clientId": "sa-cl1-reg-2",
      "description": "Technical User for Portal-Backend to call Keycloak (portal helm chart: backend.keycloak.central.clientId)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7ef011ab-1e39-4d57-9f23-3b389394b57f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dcd989ce-2636-4d01-ba95-0fa20e02383f",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9d83df9b-abf7-4504-aac4-e7966f8a877c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6bf6f4e5-562c-4382-945f-e5fef59423e2",
      "clientId": "sa-cl2-01",
      "description": "Technical User Clearinghouse update application",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "9a62e6ee-4e3c-4cb9-81b7-53e8dfbdd210",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b0d195d1-f5be-4249-ac88-133fcf138f4d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6920d343-be3f-4e3b-9330-841521ff4a2c",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2d19b59b-4970-4cc0-a561-a9dac9d49045",
      "clientId": "sa-cl2-02",
      "description": "Technical User SelfDescription (SD) update application",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "89fa847a-3f52-4ea3-a09b-5f3552cabccd",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c3d92dd-e8db-4ecd-a819-bd2d64f73f6c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "25202b04-d387-45ae-a285-a40d4eaa5b8c",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cad1382b-0dd4-4ac7-8183-1c08386c84e8",
      "clientId": "sa-cl2-03",
      "description": "Technical User AutoSetup trigger - Portal to Vendor Autosetup (portal helm chart: backend.processesworker.offerprovider.clientId)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f57ed439-7c35-4a6c-a097-aa750249c442",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ea42e697-8fa8-4359-b342-715683a67a15",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "743f3d13-5eb1-4fd7-a092-019c052f5db0",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b09392dd-8b0f-4a32-bb0b-d00a4091b890",
      "clientId": "sa-cl21-01",
      "description": "Technical User Discovery Finder",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f61880f7-a1d1-47cf-a3eb-906fa83aabda",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3c2deac0-fd68-4c39-933c-27123ff073f9",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8f318235-669e-4236-b8ea-f596b802f672",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b74416e5-2376-4f8e-a49b-8a03a053454a",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f1806543-d0ca-41cb-b029-883cdfb11a8e",
      "clientId": "sa-cl22-01",
      "description": "Technical User BPN Discovery",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "09824b45-f47e-4213-90d5-7aec6a078314",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0c72334b-238a-4f7b-bda6-3814bcd3b06e",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5b4c8ff8-6c2d-4ece-a91d-6d3113688f6e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "36e185ed-3af8-489d-a94b-a280ae205e03",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7beaee76-d447-4531-9433-fd9ce19d1460",
      "clientId": "sa-cl3-cx-1",
      "name": "Technical User CX internal - communication GitHub and Semantic Hub (Contact: Sven Erik, Bosch)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "702c92a9-9f89-4130-9d37-c1620529ca13",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "b5ba389e-26b0-452f-b784-ea1492cf4a0a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ef10553b-3bf7-46fe-910a-1bf8d7c74595",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8e82412f-7088-4562-81f2-35b85f1859f5",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d5a29608-9579-4af4-b895-458ff5b03276",
      "clientId": "sa-cl3-cx-2",
      "description": "Technical User Digital Twin and Semantic for Pen test scenario (Contact: Lukas Roemer, Bosch)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6b664acb-fb3a-427b-8c54-643e53b24388",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "882827ad-6e5a-42f2-b09e-75ff2b5893f2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9fbb3f90-f4f4-4c8f-818e-ae857da96fc3",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ca8dc7c-a24b-4635-a100-b75b23c3fa99",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dab9dd17-0d31-46c7-b313-aca61225dcd1",
      "clientId": "sa-cl5-custodian-1",
      "description": "Technical User for SD Hub Call to Custodian for SD signature (SPOC: Dmitrii)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "30897db9-574e-49ee-b968-ede77a6baf67",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00879247-75ce-491f-abed-52a6a810f685",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bb69e2e4-312f-4447-946f-b51f3c7184c2",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0c387b1e-5a80-47c8-82f5-693e3af79425",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "50fa6455-a775-4683-b407-57a33a9b9f3b",
      "clientId": "sa-cl5-custodian-2",
      "description": "Technical User for Portal to call Custodian Wallet (portal helm chart: backend.processesworker.custodian.clientId)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3d2518d7-950b-40da-b9d4-ca0fe3c6a328",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "728abacc-c436-4d67-b699-92957a69b519",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "98c6f360-6714-455a-bc94-4fa0b5072866",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a7bf4bbd-2764-46c8-b211-5d9676b1380a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "0dfcbe31-2482-46d7-bb09-0722b0e1c4f9",
      "clientId": "sa-cl5-custodian-3",
      "description": "Technical User for Custodian test with EDC (SPOC: Matthias Hub)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3e1df311-abd2-4878-9f0a-426fd1a50c0d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "17a2ea60-79e2-4d57-8db7-9931b0e1a674",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d6203b9c-6b72-44d0-8609-83077dd6a2e0",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1db97b73-9663-4eb5-99ed-d103c4bda113",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "BPN",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "7612bab1-3617-485e-8461-f1d2a7a6a92e",
      "clientId": "sa-cl5-custodian-4",
      "description": "Technical User for Custodian test with EDC (SPOC: Matthias Hub)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "783956fc-c81e-4da3-871c-436eec1fa555",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f230563b-4e92-47e6-94d4-5d7ac8eef916",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "BPN",
            "jsonType.label": "String"
          }
        },
        {
          "id": "45b77e95-5844-48c4-ba44-6c883bed55b8",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "653db152-0505-4fcc-8d9e-51eee203610b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "6ebce422-4b91-47a5-8e6b-5fca5de8a1bb",
      "clientId": "sa-cl5-custodian-internaltest",
      "description": "Technical User for custodian internal test",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "02022dbd-1259-45e8-8168-f05fae84fce8",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "38696859-c042-4a34-8c03-a5fad8eb1297",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6952af9-ed53-4482-a1c9-784d8c32e01f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "c07768b6-f49a-4c5c-bdda-4fdc81f46e49",
      "clientId": "sa-cl5-cx-1",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "463c2183-69f8-4676-bad6-4eeaeff3512d",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "836cf4e6-7654-4c84-b7f5-d07819543024",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7a8afdf-bb7b-41b7-a0bb-b561ef266923",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a7ae2ac2-1800-40f2-92b0-889cb93d3ebe",
      "clientId": "sa-cl6-cx-1",
      "description": "This is a technical user for aas-registry-internal (internal tests by Digital Twin / Semantic Hub)-",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8d0debee-6ced-4bbd-8211-d0813569ea9c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3ecec5dd-48fe-46d0-9489-76e768eab321",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1f111fb8-0011-4d5c-b05f-6b5857cc4b60",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f3850b8a-0a33-4053-96d4-04a48f055275",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1e8b03d3-d4f3-4b29-949a-4260def85751",
      "clientId": "sa-cl6-cx-10",
      "description": "Technical user for AAI Registry connection to Trace-X App and API Testing (Thomas Braun)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "21d28aaf-1921-455d-a55b-c028fa7ba5ea",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5883fd2a-d5f3-45a5-a437-9c1af976fa2e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "afb750f1-6cee-4f52-93ac-5c6229fd14b9",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4f91941a-e8b1-4406-825c-1005a33043f0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d3d0eea1-db73-427c-b262-829fb36e9878",
      "clientId": "sa-cl6-cx-11",
      "description": "Technical user for AAI Registry connection to MaaS (Contact: Daniel Metz)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e3d70828-60d8-4b0a-9615-309ace82baf8",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9a8b676a-11f2-44ec-8c30-c1e07357f220",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b54be54a-246f-4c25-9279-764e590824a3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3041d139-bff6-40d2-99ea-7fab2ae323db",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e25aa042-6318-4fff-a939-328d0d7ba386",
      "clientId": "sa-cl6-cx-12",
      "description": "Technical user for AAI Registry connection to EDC (Florian Rusch, Christian Holder ZF; Tier A)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "93714788-bd2b-4311-991b-cd373c05d024",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29fbd341-94df-4144-944a-d80a9f2f3afb",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52118695-f560-483f-aca5-e4a2ed5cdaf6",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "54d74fe3-9a56-4d27-97c8-3e4a16a0fe74",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2d7e9b76-8bd9-41b2-8823-5b7f5ec3cec6",
      "clientId": "sa-cl6-cx-13",
      "description": "Technical user for AAI Registry connection to Traceability (Proshanta, Henkel)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7b0e4794-0126-4b40-a1fa-fe00e524e054",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "610758ad-472d-4926-98b7-e6ba871879f5",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0adc9695-f521-4036-9028-38cfd0e3115d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bffb6e01-d697-4091-9ec8-0e7fa435c2b7",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4edc36e6-2a7d-4991-a7b0-b246860015ad",
      "clientId": "sa-cl6-cx-14",
      "description": "Technical user created for tests traceability Mercedes (Contact: Basar Tharan)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "91c55508-f002-4463-804a-4c22cec6a88d",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "acd775d6-5d9b-4229-a271-2aebc013f99d",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "adab4c59-47b6-4855-9996-0267e040cf7f",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ea83750-3462-403a-9bb6-472ca73d6b9f",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "18204844-8439-4298-8053-ff1414f819a4",
      "clientId": "sa-cl6-cx-16",
      "description": "Technical user for AAI Registry connection to Siemens (Kiryl Batsiukov, Siemens; Vasileios Karagiannis, Siemens)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "a401ac75-e155-46fa-ac0c-ea9dcdbcac1b",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2a7a1a2a-b3d9-4ea3-89b3-e654636f7002",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cd0547f5-3bbf-4ed5-a490-cb4c86a22aa3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f99b8082-ee0f-4d59-8a9e-b0da6c2188b2",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2685ce31-a3ab-4c23-9ccf-90f721690e81",
      "clientId": "sa-cl6-cx-17",
      "description": "Technical User for AAI Registry connection to EDC (Florian Rusch, Christian Holder ZF - Sub Tier A)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e76b4367-7ff9-4844-a446-727fa4bb55b6",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c23d5a1-2ea4-4101-a0c3-bba9bb822695",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dcc3fbce-713e-4d49-a0cc-413c893ee17d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b736a39-00d7-4fe5-ba07-c16ecc6a788f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0fd16c0e-afa1-4256-89cc-503d70d1eea5",
      "clientId": "sa-cl6-cx-18",
      "description": "2nd Technical user for AAI Registry connection to Trace-X App (Thomas Braun)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f130bff5-3c7c-4f31-9a56-a1395403a895",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "509b41c6-e05a-4ee8-b2dc-814c83730735",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6f3623a1-1d05-4ed2-88c9-d77f761702aa",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "560cce4b-974c-4a87-b4c2-74233cd998a4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f693b3d8-6aa2-4d96-8857-8cf1edf181c7",
      "clientId": "sa-cl6-cx-19",
      "description": "Only a test account for Christian Kabelin as READ User for prep of test data",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "9abf90f4-7887-449c-94ec-95f8bcd3182a",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5baef81b-caab-4679-a688-a5cd0bb6f9d0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c66bdc4d-dc6f-49e9-9d9c-ec840b858026",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a8a91c21-fa03-478f-a57f-f534d046b4b9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fae37447-4174-429b-91d2-b696b68287d7",
      "clientId": "sa-cl6-cx-2",
      "name": "",
      "description": "This is a technical user for Semantic Hub",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://catenaxintakssrv.germanywestcentral.cloudapp.azure.com/*",
        "http://localhost"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "deb3611f-4206-451c-b8e0-d1d6ddc7caa0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eb5c6815-8d64-4495-93ea-1fc6b430b1b8",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "54ed3d77-0ca8-4a2c-8652-5865948ac1d6",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e5b57306-c07a-4ebb-bede-5d220880d405",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e1e38aa7-4105-4d29-881e-b1224796d59d",
      "clientId": "sa-cl6-cx-20",
      "description": "Technical User for Siemens - AAS Connection (SPOC: Kai Lohmann, Trusted Traceability)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "1cd020e8-8f51-4565-ba65-0030d14c6509",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "acf67e71-d559-477c-804b-faf56ee8989f",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "73a0cbc7-70e5-46d4-9c27-43f6e19217f4",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "afe8c9c6-c10c-4e45-a531-e75e5517b91a",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cbc24c55-5452-4a31-a8f1-862ea0ccc082",
      "clientId": "sa-cl6-cx-21",
      "description": "Technical user for AAI Registry connection with EDC (Kiryl Batsiukov, Siemens; Vasileios Karagiannis, Siemens)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7ae5c6ac-f435-4ae4-905d-ed47a098bd9c",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7502bfe4-2bff-4164-92ac-21fa4a6d9f2b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1660be60-ad4b-43e9-ae21-9d04c362be47",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f5200744-0f8e-4310-a836-4de1d0eb5e6a",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "feee7b77-71bf-4f95-9276-38dccfa73edb",
      "clientId": "sa-cl6-cx-22",
      "description": "Technical User for AAI Registry connection to EDC (Dirk Dennin, in action of DLR)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "12c71551-9da8-40aa-82b2-d7c9b57ec205",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5d77e17f-b370-45b7-b76e-81b27f0aacd9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9888c544-10bf-4cc6-8b7e-95fc6bc4b26e",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1cff3035-0b3e-45e9-9b38-7bc05f5e5697",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "977edf04-7d5a-489c-a057-b00863fdd27a",
      "clientId": "sa-cl6-cx-23",
      "description": "Technical User for AAI Registry connection to ADAC Fleet (Dirk Dennin & Asdren)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "5a7c0ea2-8575-4f80-bfe7-8d87dae2016a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "711201e5-7add-401b-a8a2-8e7f3c922ea2",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5fd60367-8180-4465-90f3-d6260cbbe73e",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dfb7305d-a492-47c5-aeab-8c926935e792",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "97bcbd36-39fe-4553-923f-0be2b7c3967d",
      "clientId": "sa-cl6-cx-24",
      "description": "Technical User for AAI Registry connection to ADAC DTC (Dirk Dennin, Asdren Kuci)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "b5889d7b-1120-4499-88dc-b27b84cb7fcf",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ac6261a-1314-4c86-aaf1-43b8a10ef6f9",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e86a433f-26ec-41a1-9b35-e294b95e6699",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1fa30aa0-afac-40ce-86f3-0fff0be1c4bc",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1db8b620-0b9a-4f21-9a04-431d9e5d72a9",
      "clientId": "sa-cl6-cx-25",
      "description": "Technical User for AAI Registry connection to Siemens CO2 (Werner Eberling)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "61a35863-4cbd-4249-b67c-edb37d0be2ed",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5496020a-c216-49b9-b1bd-fe3b11d7a790",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "76c44288-43c4-4fde-a205-ade6e044ee3d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "22eae628-8360-472f-86a7-98be9771e688",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0a902ec2-33d4-4f5c-9aa7-d51af2252044",
      "clientId": "sa-cl6-cx-26",
      "description": "Technical User for AAI Registry connection to Siemens CO2 (Werner Eberling)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7c7a382d-dcdb-40bb-b2ac-77c9541e59f7",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1782d640-81ba-4215-8dcb-557d73a2c1e5",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c5be708e-59d1-4ca9-ab82-2519b0a8215e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8bcd5dce-f859-4a83-88c9-8c60efec6355",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dc1eb8bd-d579-4dd8-bc66-6222d881566a",
      "clientId": "sa-cl6-cx-27",
      "description": "Technical User (READ) GreenToken for EDC integration scenario (Contact: David Rauch, SAP)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "2cbb47fc-8864-4963-a274-42f15ffd19a6",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "101d5a0e-2eab-42ea-adaa-75482df0ff44",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8ac8e285-8089-4789-bf38-9d310edb2300",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c4abf7f7-c84a-4c98-8a67-f3f7d68f2031",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1cf8af37-ac23-47e2-8e48-ebf904585f0f",
      "clientId": "sa-cl6-cx-28",
      "description": "Technical User (WRITE) GreenToken for EDC integration scenario (Contact: David Rauch, SAP)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "372ddd3c-7aa4-485a-b333-e1fed1e0ec4f",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ee9af151-5cd4-4ac1-be87-4f9145fab0ec",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c70e9a49-a871-4bfc-810f-8f85a49f847e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2e0e393c-99b1-481d-bd9a-cc10465cae68",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "acb29a18-6306-44c0-ac94-8548df74b315",
      "clientId": "sa-cl6-cx-29",
      "description": "Technical User (WRITE) CX Battery for EDC integration scenario (Contact: Jochen Braun, CGI)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://materialpass-pen.dev.demo.catena-x.net/*",
        "http://localhost:8080/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "db29a54d-b840-435c-a3c2-5a0286cbd8de",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a445a212-c5da-4bf9-b093-19c5b9abf618",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d359aa48-a5ef-469d-a2b8-47bc90507ba4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "21f0a51e-bec2-4caa-9bfd-be20164ea15a",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7c87b118-63d5-4f72-9772-1f4632a1b3fc",
      "clientId": "sa-cl6-cx-3",
      "description": "Technical user for AAI Registry connection to BMW data pipeline",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "426b3802-567e-4235-94cb-5cf4c1f1f748",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0b17c9ff-d20c-4425-8c63-36fabe5802f6",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6eaa3fd-bf8f-4ef4-8a6f-1629004b80c3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e08c09db-18ce-4b61-94cf-1e152c996136",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e81223c0-59b1-4788-a8d9-5022f13cc4b3",
      "clientId": "sa-cl6-cx-30",
      "description": "Technical User (READ) CX Battery for EDC integration scenario (Contact: Jochen Braun, CGI)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://materialpass-pen.dev.demo.catena-x.net/*",
        "http://localhost:8080/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "75a1c382-0549-45e4-876e-1e412ebdbb48",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00c147fc-29c1-4d94-b998-d7c8ce3a720e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eb00dd9a-5ee6-4e79-86ca-e46e39ee1fc0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0ce4a2fa-c85a-4bd1-b571-5afe6a79ca6d",
      "clientId": "sa-cl6-cx-4",
      "description": "Technical user created for postman tests for traceability (Contact: Markus kreuz)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8c334961-82eb-4784-b7bf-05ebda7edc1c",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bd34d354-2e82-4987-803b-0e8209a8cc1b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "46cd680e-ee4e-4511-ac76-a95851657ced",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "741c0ba1-543f-4dea-83df-b1735b2ed0e2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3e0182e-abb2-4451-8180-51538eaeb93a",
      "clientId": "sa-cl6-cx-5",
      "description": "Technical user created for postman tests for traceability (Contact: Clemens Braband)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "531faee9-5a4b-451a-909f-b9f603f48fc2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6bff54b5-ed16-4ef3-9e94-73bfc39da7c4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ee566510-db23-4569-ad1a-7691f0f12355",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5eae602e-0242-4539-9728-fb16df138252",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "674ba68c-891f-4df6-9d11-1c48600f986f",
      "clientId": "sa-cl6-cx-6",
      "description": "Technical user for AAI Registry connection to BASF Data Service (Gabriele Eckhardt)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8932692f-4aac-4874-8019-0325a487e78b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2cb46242-7053-4bb7-a40c-2f107d0ffb2e",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "07557d98-31c4-48cc-ba12-93ac7938cad4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d8eff86d-fbe2-468f-a4a0-2ced8d0993e0",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fdaa99b6-c8e9-4521-a70c-4d535a1e573e",
      "clientId": "sa-cl6-cx-8",
      "description": "Technical user for AAI Registry connection to Traceability (Matthias Binzer) - testdata2edc",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3aca6d5d-f95f-448a-a60f-daa2aed09d04",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0ba4d9a3-bb4b-4667-afe4-3fd1c7638a97",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eed9f43e-4464-40f3-a2fd-07a003ba93b2",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29a0fd3f-c2b9-4ff8-8cb9-046bbfb02d98",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3af980d-b1f6-447a-ba96-5dacd52a7adf",
      "clientId": "sa-cl6-cx-9",
      "description": "Technical user for AAI Registry connection to IRS (Johannes Zahn)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e3dfef3a-abae-4bee-a6ff-2c6b0f91e22c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "621a15c8-77ce-402e-95e3-85165f90ed81",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ad8fd51a-8262-4345-aa98-2892edbb52e7",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9d65811a-6f05-4bc8-9dd3-ec664ed87f42",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6e2f3a74-9277-4265-a0bd-8f8f41ba0530",
      "clientId": "sa-cl7-cx-1",
      "description": "Technical user created for BPDM / CDQ connect (SPOC: Peter Schenkel)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "33ef0160-e559-4fde-8faa-657140437026",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "61c367f1-dcd7-4190-9d63-97c0b3ae5afc",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1c8aad27-8158-498b-bf99-e6de92799b6d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d1c857fb-0c7d-4b6d-b6e8-34bf4de76d6d",
      "clientId": "sa-cl7-cx-2",
      "description": "Technical user for BPDM connection to Fraud App (Michael Wirth & CGI: Fabio)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "23db4b23-856e-4f3b-a1e2-f935d2373d0d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5db07b78-2eb9-405d-a0eb-9ab0e94a1e4d",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b01e802a-984a-4c95-a5f7-db4f3fd4b16b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "09b70efe-f7e1-4880-a375-de44e2e1b38a",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f6627ae5-54ac-4e53-871d-875de8879e51",
      "clientId": "sa-cl7-cx-3",
      "description": "Technical user created for BPDM Pen integration with Invicti, WRITE (SPOC: Patrick Zeller)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7876f4d9-faa0-4386-af39-3681b0b4295b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b2b9d6c3-842c-4ce3-b984-a7cfc2464e1f",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "03b778d8-3f51-4d37-9e25-5899fb4c1099",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "12b94ca3-d6cb-4806-a288-7efa3ea919e9",
      "clientId": "sa-cl7-cx-4",
      "description": "Technical user created for BPDM Pen integration with Invicti, READ (SPOC: Patrick Zeller)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "82e2b111-a709-470f-98c6-7b5cc845eb97",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "83fca7bf-051a-4a8e-a84b-251f9a68c9d1",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b4eb789-46a5-42db-904b-a90feddd91a4",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "183aae87-c9cf-4d70-934b-629aa6974c54",
      "clientId": "sa-cl7-cx-5",
      "description": "User for Portal to access BPDM for Company Address publishing into the BPDM (portal helm chart: backend.processesworker.bpdm.clientId)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "08dbaf87-e25e-489c-bec9-f062af3de2df",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2420c9fc-2c5a-4e54-b6c1-3d72e4eb9e85",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fb8aa3d7-44dd-4348-9a43-a48fadb0a858",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ccc8006a-71d2-4fd8-b945-d1d3bd716cef",
      "clientId": "sa-cl7-cx-6",
      "description": "User for Data Quality Service BPDM, (SPOC: Tim Gerlicher)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "d070c22c-fd82-4d6b-b68c-5e92dad965ca",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "edff7e10-bc1c-48ed-9e6e-1718b9b3d3ae",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2e8aa311-8e28-4af0-9d69-0819e4716f47",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "04981b7f-5a0c-49c0-8d7e-ec57c185922b",
      "clientId": "sa-cl7-cx-7",
      "description": "User for API Testing BPDM Pool and Gate  (SPOC: Nico Koprowski)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3d9fd1fe-9a5e-4706-b007-12cb42220dd3",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "16008a03-3528-4212-aa68-c860f6ea5073",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6f5a1ef2-5827-4d0f-bbf3-c938dfe2f25e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c2bdc736-ca35-43c4-8e18-27e7425df9f0",
      "clientId": "sa-cl8-cx-1",
      "description": "Technical User for Portal to SD (portal helm chart: backend.processesworker.sdfactory.clientId)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "5049595f-673e-4ce2-9ce2-90e11c0fc6e9",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b8086ec0-3da2-4f98-a7fd-19d007709e6f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "55da2734-a7e2-4d89-b210-7cb0a24fced4",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "f69006e1-e4a6-4237-b73b-89711c0934c2",
      "clientId": "sa-clx-cx-1",
      "description": "Technical User für SAP (Felix Ruecker) um auf BPN und Registry zuzugreifen",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "eb5ed933-696d-4b51-a5e0-534da33028a3",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ace07ce7-da41-4a76-b6a0-8535eab2cc4a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4be32837-1566-4215-a712-f8af835fa0c1",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ea6f463-9346-4650-8ecd-39298823c513",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d6b6e09c-d92d-4915-a7de-29488b0597b4",
      "clientId": "sa-clx-cx-2",
      "description": "Technical User für SAP (Felix Ruecker) um auf BPN und Registry zuzugreifen",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6758fb03-3059-48b7-ad73-5b506e52f1b2",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ddf2bba9-11a9-4329-8418-aa1cd6f9a050",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0ef7dcfa-86a7-4280-803e-e394d2515c36",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "54a933f7-f652-47e5-a3e7-a1f23f50034b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "66e16962-df76-4829-95f2-91e0577c3c92",
      "clientId": "SAP-Login",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://amjx8gvyp.accounts.ondemand.com/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "47b7bb2b-b544-4f54-9a37-f6c5f87f7f94",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b1b3c279-a5c0-44dd-bda6-b43cc9a904ac",
          "name": "Sub_to_email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "sub",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aa31d5d5-cb28-400d-b45e-46b09dd591f9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "748e5a80-a12e-432c-898b-0af1f34355bc",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c2793b11-a96e-4ca4-be82-d58b500450bb",
          "name": "Groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "Groups",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "Groups",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "84182ad6-6cfb-46f4-a85c-04a67283db78",
      "clientId": "sa_testAutomation",
      "description": "Test Automation Test User",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "1c238aa2-23d5-4d41-a295-d41163f7a25f",
          "name": "BPN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2cb0bc2c-31ee-48c3-b420-2500e253c6a2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "db24b4ea-a4d2-4471-8b84-8ff6afeae47c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b6ab6434-2fd3-4a9d-a40e-9fd5fcd0fdef",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d5265cd8-d128-4dc9-8602-d49d1df0a86c",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/CX-Central/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/CX-Central/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "12d9df9a-241b-4ec2-bafa-3f26ccaa1890",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6df310ed-500e-43d5-b510-fa4668e939ee",
      "clientId": "technical_roles_management",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2486e439-4fbd-4f53-bc02-aff9d0699e07",
      "clientId": "urn:uuid:7bd86018-d0a2-421b-9e00-b77bab0838b1",
      "name": "CPM App",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SSO"
      ],
      "webOrigins": [
        "https://impact.bmw.cloud"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIE0zCCArugAwIBAgIEWSwjGzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBpbXBhY3QuYm13LmNsb3VkMB4XDTIxMTEyNTEzMTkzMloXDTMxMTEyMzEzMjkzMlowGzEZMBcGA1UEAwwQaW1wYWN0LmJtdy5jbG91ZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJr3kQjeWOd9bPBTGAlQpbrh4kDmweESAeu2kXPqtQkEaHjdIHbgQAE/J1BAxme0hB0RzeAV1h4rdg8m1UUx2jaZ/QPvwgggFaGcdykM2Ja/f/dnnm5P9Xi8DYRWR+UJy9Sa9gJwPfgCPWNwcXNKC2+xW/fubvjfEE8K040KqhPFrT5wOA6mbDohYBrGa4xcXrnNsts2dnU6ecXnlrgjYpYHL0cIxVRvtxJ49VgJRuWXCIDLqkogqm/FdHIcwMcy11GfM0O3JTRl+oNGyTYBHaFrwLOWmv3LggcBoAPIIz4tlsr0bMG29IW2snVIPL4x3NptehODwfcOiagfd+QNjAungmCugpoPYM78bxkKT/24LTg3lFYSqC/CGSkz4OQLEbwYUV/qrcNo2r3tQsD3JahCppH2zhvJSoko0XijVRyQ8Xh8hWWaj3ana89rCg7DztSQJmrM0YjYNngTnQgdsK0NVljy5tL7nLHpV/DQ0OmzW84C7uNtDDmwysGof89H6VeoovLhWbsqPhhcEapw0v7atpRWSge2Mc0Wh3kiHxmhHQ4tBDa37g/8U8Dhr+w+DmAzQPmRg6/joir/fpgF89ox7J+iONKV9M6JMtIlpIFKWdxL+NMeB1aC3D7cYW9+YSHmkqxX1xFWDs4JbFKqIZYaMkzEqpIz4CgVk+MYfdyFAgMBAAGjHzAdMBsGA1UdEQQUMBKCEGltcGFjdC5ibXcuY2xvdWQwDQYJKoZIhvcNAQELBQADggIBAFCOGx89nkHj2t0PbGuxmnYI5tCEtRuud4/hwZ4Z8kDS23c+2yO4VaQQhn2tYumHMm6mSeImQVUOQQtp+ltaP9k8va8qto3zfhBc6CPrent8Lxw6xn7j/G0EWryvtLy/G0/nDcb5z4+Yilfi49uJdNw1LftX4RvesVSaWqIhTkBbqly5oEysYgGDf7+eW9Af8febKAMbnvzO2yuKXa7XN2xNuVtvF+bBa2gbgIjyPp3mTMm2SGqacqlrTeGj1nFcvVRm03XKAd1IzPhhjGFCjS3lM37qNSrwG7QVTh0fEtStObspEc/rMuAG2huURYEVFsKTEOP3n9Mn4p3veqxVK751jdqxUCmsa942e/P+5JbijHROAmRUyNX/E5ZQh0bf9IGMPrLgVHz+NYddchNmMXa7eMHJZSHnkVvj+K7cXhUS4vN6GuP/WYpbPGCRO3jiVGnZ61ckT5IVUPs5t35k/btQDw+MIc3dJ2UGbuofmmdZ+BiNw3cmICkSTdVIRJvQUG7rsCGHWQ3TjsS/MXDmfmfu5wLD6uY7xOarirCPKwbqto0tICNcV6CFta1VO6Yj8tMaRpdG9MrGHmXNz+ms3H2fd4HyFaL/sxwv2uHW+f8R7YldYnVebTwjtoITSYgZHdJ8yDicKWEFsU1RRlFTbkdvuysyz0+GXKnJbwdpFnBY",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "true",
        "saml_single_logout_service_url_post": "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SingleLogout",
        "saml.encrypt": "true",
        "saml_assertion_consumer_url_post": "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SSO",
        "saml.server.signature": "true",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "/ewlwAsHsIG1PkTPfKmGSGYGJio=",
        "saml.artifact.binding": "false",
        "saml_single_logout_service_url_redirect": "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SingleLogout",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIE0zCCArugAwIBAgIEWSwjGzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBpbXBhY3QuYm13LmNsb3VkMB4XDTIxMTEyNTEzMTkzMloXDTMxMTEyMzEzMjkzMlowGzEZMBcGA1UEAwwQaW1wYWN0LmJtdy5jbG91ZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJr3kQjeWOd9bPBTGAlQpbrh4kDmweESAeu2kXPqtQkEaHjdIHbgQAE/J1BAxme0hB0RzeAV1h4rdg8m1UUx2jaZ/QPvwgggFaGcdykM2Ja/f/dnnm5P9Xi8DYRWR+UJy9Sa9gJwPfgCPWNwcXNKC2+xW/fubvjfEE8K040KqhPFrT5wOA6mbDohYBrGa4xcXrnNsts2dnU6ecXnlrgjYpYHL0cIxVRvtxJ49VgJRuWXCIDLqkogqm/FdHIcwMcy11GfM0O3JTRl+oNGyTYBHaFrwLOWmv3LggcBoAPIIz4tlsr0bMG29IW2snVIPL4x3NptehODwfcOiagfd+QNjAungmCugpoPYM78bxkKT/24LTg3lFYSqC/CGSkz4OQLEbwYUV/qrcNo2r3tQsD3JahCppH2zhvJSoko0XijVRyQ8Xh8hWWaj3ana89rCg7DztSQJmrM0YjYNngTnQgdsK0NVljy5tL7nLHpV/DQ0OmzW84C7uNtDDmwysGof89H6VeoovLhWbsqPhhcEapw0v7atpRWSge2Mc0Wh3kiHxmhHQ4tBDa37g/8U8Dhr+w+DmAzQPmRg6/joir/fpgF89ox7J+iONKV9M6JMtIlpIFKWdxL+NMeB1aC3D7cYW9+YSHmkqxX1xFWDs4JbFKqIZYaMkzEqpIz4CgVk+MYfdyFAgMBAAGjHzAdMBsGA1UdEQQUMBKCEGltcGFjdC5ibXcuY2xvdWQwDQYJKoZIhvcNAQELBQADggIBAFCOGx89nkHj2t0PbGuxmnYI5tCEtRuud4/hwZ4Z8kDS23c+2yO4VaQQhn2tYumHMm6mSeImQVUOQQtp+ltaP9k8va8qto3zfhBc6CPrent8Lxw6xn7j/G0EWryvtLy/G0/nDcb5z4+Yilfi49uJdNw1LftX4RvesVSaWqIhTkBbqly5oEysYgGDf7+eW9Af8febKAMbnvzO2yuKXa7XN2xNuVtvF+bBa2gbgIjyPp3mTMm2SGqacqlrTeGj1nFcvVRm03XKAd1IzPhhjGFCjS3lM37qNSrwG7QVTh0fEtStObspEc/rMuAG2huURYEVFsKTEOP3n9Mn4p3veqxVK751jdqxUCmsa942e/P+5JbijHROAmRUyNX/E5ZQh0bf9IGMPrLgVHz+NYddchNmMXa7eMHJZSHnkVvj+K7cXhUS4vN6GuP/WYpbPGCRO3jiVGnZ61ckT5IVUPs5t35k/btQDw+MIc3dJ2UGbuofmmdZ+BiNw3cmICkSTdVIRJvQUG7rsCGHWQ3TjsS/MXDmfmfu5wLD6uY7xOarirCPKwbqto0tICNcV6CFta1VO6Yj8tMaRpdG9MrGHmXNz+ms3H2fd4HyFaL/sxwv2uHW+f8R7YldYnVebTwjtoITSYgZHdJ8yDicKWEFsU1RRlFTbkdvuysyz0+GXKnJbwdpFnBY",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "id": "32795711-2e76-43f9-8138-3ce5b9eae1a2",
      "name": "catena",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "748924d3-243b-4d66-9708-89e258dffb2c",
          "name": "tenant-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "tenant",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b3dd05cc-7289-4a87-9625-af60b859d748",
          "name": "organisation-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organisation",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organisation",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1d94ee73-6981-486c-a2d8-2e2f857cd125",
          "name": "bpn-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "13834c57-9211-4e3e-b892-0632a3c15225",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6c0bfbc5-e3d7-45f9-a0bc-61e30225e22b",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "8868b283-df78-4c9a-b78e-1c29e4b9b61c",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "23e5acb7-2d8c-4bca-8565-36fb57ee7ee0",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0adf14b5-a345-4d20-83cc-2a353c686161",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "fc35a8f5-fedd-4b66-b3fa-9427e3947dc5",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "73a111cf-271c-4b9f-abca-e4894e29229d",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c06270fe-f203-4c9b-92a8-ff716b81127a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "8e22da0e-f450-444a-80b4-824a69532949",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "09dc23a3-1b9f-4b9d-aa87-e875f0f20655",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0543fff7-3732-433b-8a24-d2784bba1501",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "34a2f332-9752-4a7f-9d61-b4dbd40946b4",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "955c2cb6-3abb-44d1-a3eb-9ebec0cf6094",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "48b4aa99-383c-4178-b966-c0ae710d8c21",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e24a7d06-7406-4b2f-854e-a5653f8b964f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "987e5408-e6ef-4cd2-a51f-451fb7c0dc4e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1a9bd37a-377a-48ae-9b95-a1c0c5f3fa08",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dca5ee31-87cb-407b-aba6-d6c846e6a6b4",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6af98429-3234-4f57-95c0-7df4209cb349",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b7e70ea0-1b54-469b-b818-dcb7d4657d9b",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "02aff4ea-454c-41cf-8bf6-1bea1e933812",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "438a5f2c-727b-4ba2-82de-d5cf4b8d4daa",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "70bf1855-c34a-4bd3-a06d-f3d62d91693b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0c9106a1-9c93-47bd-85b3-8607ba8485c2",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "4386dc68-8dd3-4439-8c63-eabcdb92fd76",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "78be8eb6-ca31-434c-8441-6abbfe553a22",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fb918735-48a7-4f96-8830-606815788dfb",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6e4e8483-7c58-4539-98d1-4b02ff5dc6f5",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "58e59849-6457-4c8b-b713-2c5a008461c6",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "99ca536c-58c2-432f-904e-10926bbc207b",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8a14f08a-0ba9-44ae-83bd-5a65b9d0fe8c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2c452702-a301-4cc7-b76c-619b23f44fa0",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "1e6f0566-fc33-4e1f-bf4e-686676fcde70",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2629904c-d708-4072-9fe4-98e4a30c7dde",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "07ab75f1-40a3-4b2c-ae83-94dac6e529e2",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "email",
    "roles",
    "web-origins",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "password": "**********",
    "starttls": "true",
    "auth": "true",
    "port": "587",
    "host": "smtp.office365.com",
    "replyTo": "no-reply@catena-x.net",
    "from": "Notifications@catena-x.net",
    "ssl": "",
    "user": "Notifications@catena-x.net"
  },
  "loginTheme": "catenax-central",
  "eventsEnabled": true,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "UPDATE_CONSENT_ERROR",
    "SEND_RESET_PASSWORD",
    "GRANT_CONSENT",
    "VERIFY_PROFILE_ERROR",
    "UPDATE_TOTP",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "UPDATE_PROFILE_ERROR",
    "IMPERSONATE",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "REGISTER",
    "LOGOUT",
    "AUTHREQID_TO_TOKEN",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "DELETE_ACCOUNT",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "CLIENT_DELETE",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "VERIFY_EMAIL",
    "CLIENT_DELETE_ERROR",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "EXECUTE_ACTIONS",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "AUTHREQID_TO_TOKEN_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "CLIENT_REGISTER_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "VERIFY_PROFILE",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [
    {
      "alias": "CX-Test-Access",
      "internalId": "60e5d38d-c0e2-4ad0-b8b7-0ac98d56d6a7",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/certs",
        "issuer": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Test-Access",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/auth",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientAssertionSigningAlg": "RS256"
      }
    },
    {
      "alias": "Company-1",
      "internalId": "90455c53-7a98-48c1-bf51-c84763087ebb",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/certs",
        "issuer": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-1",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/auth",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientAssertionSigningAlg": "RS256"
      }
    },
    {
      "alias": "Company-2",
      "internalId": "ab9d4e1e-023a-4877-9747-336d68ef71b6",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/certs",
        "issuer": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-2",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/auth",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientAssertionSigningAlg": "RS256"
      }
    },
    {
      "alias": "Security-Company",
      "internalId": "5503ea02-cc4b-41ca-9598-88b718b8a500",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Security-Company/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Security-Company/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Security-Company/protocol/openid-connect/certs",
        "issuer": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Security-Company",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Security-Company/protocol/openid-connect/auth",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Security-Company/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientAssertionSigningAlg": "RS256"
      }
    },
    {
      "alias": "Service-Provider",
      "displayName": "Service-Provider",
      "internalId": "94318a98-b4e7-4a0a-8742-4e8fdfcbd626",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "validateSignature": "true",
        "clientId": "central-idp",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Service-Provider/protocol/openid-connect/token",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Service-Provider/protocol/openid-connect/auth",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Service-Provider/protocol/openid-connect/certs",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Service-Provider/protocol/openid-connect/logout",
        "clientAssertionSigningAlg": "RS256",
        "syncMode": "FORCE",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "App-Provider",
      "displayName": "App-Provider",
      "internalId": "fc91ae64-319e-4b29-ae2a-599da7a53f3e",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "validateSignature": "true",
        "clientId": "central-idp",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/App-Provider/protocol/openid-connect/token",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/App-Provider/protocol/openid-connect/auth",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/App-Provider/protocol/openid-connect/certs",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/App-Provider/protocol/openid-connect/logout",
        "clientAssertionSigningAlg": "RS256",
        "syncMode": "FORCE",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "CX-Operator",
      "displayName": "CX-Operator",
      "internalId": "fbc571fd-cd44-4cec-a36e-4eba647fe712",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "validateSignature": "true",
        "clientId": "central-idp",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Operator/protocol/openid-connect/token",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Operator/protocol/openid-connect/auth",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Operator/protocol/openid-connect/certs",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/CX-Operator/protocol/openid-connect/logout",
        "clientAssertionSigningAlg": "RS256",
        "syncMode": "FORCE",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "Onboarding-Provider",
      "displayName": "Onboarding-Provider",
      "internalId": "8c1f0cf6-2872-45aa-8cfe-10a92de89092",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "Login without auto user creation",
      "config": {
        "validateSignature": "true",
        "pkceEnabled": "false",
        "clientId": "central-idp",
        "tokenUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Onboarding-Provider/protocol/openid-connect/token",
        "jwksUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Onboarding-Provider/protocol/openid-connect/certs",
        "clientAuthMethod": "private_key_jwt",
        "authorizationUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Onboarding-Provider/protocol/openid-connect/auth",
        "logoutUrl": "https://sharedidp-pen.dev.demo.catena-x.net/auth/realms/Onboarding-Provider/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientAssertionSigningAlg": "RS256",
        "useJwksUrl": "true"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "1ecf517a-50c4-4f0f-b9b6-e16cebc3d169",
      "name": "organisation-mapper",
      "identityProviderAlias": "Company-1",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "company-1",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "974965c5-903e-428f-b48b-6423b5aa4a31",
      "name": "username-mapper",
      "identityProviderAlias": "App-Provider",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "968c0e45-aa98-4bd7-857e-a09bb38139f2",
      "name": "organisation-mapper",
      "identityProviderAlias": "Security-Company",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "security-company",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "aea30706-1a79-4fbf-b2a6-2c20d23e9795",
      "name": "organisation-mapper",
      "identityProviderAlias": "CX-Test-Access",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "CX-Test-Access",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "d5c3823c-2f13-4e20-b201-7f83da4b0a81",
      "name": "organisation-mapper",
      "identityProviderAlias": "Service-Provider",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "Service-Provider",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "53304ebf-ff71-47df-90fb-12d3c3d843ab",
      "name": "organisation-mapper",
      "identityProviderAlias": "CX-Operator",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "CX-Operator",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "339d6273-8441-4f53-b436-146db9d9ae92",
      "name": "username-mapper",
      "identityProviderAlias": "CX-Operator",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "873a8c8a-9cce-428c-9375-b51b9909843f",
      "name": "username mapper",
      "identityProviderAlias": "CX-Test-Access",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "409d46ae-0f8a-4f8a-9830-92c2429f8c0b",
      "name": "organisation-mapper",
      "identityProviderAlias": "Company-2",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "company-2",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "b865ae86-2dd4-411c-b35c-641e08c03688",
      "name": "username mapper",
      "identityProviderAlias": "Security-Company",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "dee3811e-cf49-4116-b764-5b69e9e31060",
      "name": "username-mapper",
      "identityProviderAlias": "Service-Provider",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "b0736bcc-c339-47bf-84a4-22193083cd98",
      "name": "username-mapper",
      "identityProviderAlias": "Company-2",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "7591fe5a-dd49-450c-9239-0adb015b29ec",
      "name": "username-mapper",
      "identityProviderAlias": "Company-1",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "273a3f7e-6d0f-4ccf-aaa1-41bd8066d10b",
      "name": "organisation-mapper",
      "identityProviderAlias": "App-Provider",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "App-Provider",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "5f77e673-37bf-4950-9522-d0299c157926",
      "name": "organisation-mapper",
      "identityProviderAlias": "Onboarding-Provider",
      "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
      "config": {
        "attribute.value": "Onboarding-Provider",
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "ab25cbe7-60bc-49ed-aa4a-707f84a70893",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "277b586e-0b26-40e9-90d1-e76305d69a10",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "552bd2e5-c656-4796-8d61-b87c3508aab5",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "de1bbb33-9e18-4fc1-9ea3-1fd8ad22eae9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "b521525f-30e3-4b93-b42b-8c0dd53fc3af",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a4df1d6a-2c46-44f4-9d06-62eb9b754bab",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "f7e25fe0-dfe5-451a-8f54-ceea0cf201b4",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d15d2dae-9c9c-4c7d-83f3-726f29194489",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "80d93c16-6221-4f9f-b8af-20c313ae6c04",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "2bd55ad0-2f32-40f3-9749-c2d422fb697d",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "676a20ad-a79d-4175-998a-672bf4826e92",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "50220023-09bf-443a-a8b3-f306279cbb5b",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a510d16e-c3f7-4a88-b853-625a2cd357b4",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "de",
    "en"
  ],
  "defaultLocale": "en",
  "authenticationFlows": [
    {
      "id": "fff7e51f-802f-4826-b18e-551667d2f5af",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d1389bd7-4d67-4258-a3b7-e8146a8e17f0",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "078aeee3-8e08-4904-9455-10e86293fdc3",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "97a6d2ad-95fe-4a49-ba16-4fe37716f8ca",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "43a7d34e-262c-42ef-874a-42a7151ef7fe",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "49dbe5c0-a28e-4bc1-a735-01b1d44526f8",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "8843a182-cb40-40c8-acb8-a96c131820bc",
      "alias": "Login without auto user creation",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Login without auto user creation User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "bad3c307-e0c7-47b3-8124-3d850c5dbb8f",
      "alias": "Login without auto user creation Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Login without auto user creation Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "0875bc85-b5cc-4268-8faf-3706d2d377ad",
      "alias": "Login without auto user creation First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a98586a2-cdf9-411d-aea8-48c4cf7b139a",
      "alias": "Login without auto user creation Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Login without auto user creation Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5c6cb05b-6984-4884-ada0-302a352cae52",
      "alias": "Login without auto user creation User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Login without auto user creation Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "87cd4301-f245-4e81-9877-51bea2f77c4f",
      "alias": "Login without auto user creation Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Login without auto user creation First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "75deb0f4-5ce1-4daa-ac6a-ad992dee52cc",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "70aac624-4ea6-45b7-a3fc-d8456ef2efdc",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "6913a8ea-93d4-4ff7-a6c4-388b2b88cb60",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "ffae9561-c06f-4b23-9748-8120ab8baaa8",
      "alias": "WebAuth Browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "WebAuth Browser forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "98520dfb-3e2a-4280-964a-5c6a492fd9e2",
      "alias": "WebAuth Browser Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "webauthn-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 21,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "b6215c1f-1023-4748-9e9e-ae700573c9ea",
      "alias": "WebAuth Browser forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "WebAuth Browser Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d6521692-2a35-4fab-99a0-655393e7be1c",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "c8b74991-78e2-4948-9b71-9cd95692244a",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "6fc680e7-1083-4ae3-993c-18793394c1d8",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "fcc00603-9695-436a-8173-bad95ae06eb7",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "5ecaed63-22cf-4937-93a1-e4e03c3f84d3",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "fc1db14a-88b6-4ffd-92bf-ef2aff4b20e4",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "8d8df8b8-382d-4be1-8039-c24097927268",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4e8828db-1033-4383-988c-8a80f5294c8c",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5ba3a31b-4969-4b6a-9ade-6b519fd285cb",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d182f5b3-f390-4748-bd2b-65d225d27a76",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "afd142c8-1d76-4054-bfa3-66c0ad5244b6",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "54a381ca-598a-4516-bc2c-04aeea23c6cf",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "ad18ac62-bb08-478a-8260-0abad5be4c3d",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "userProfileEnabled": "false",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "16.1.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
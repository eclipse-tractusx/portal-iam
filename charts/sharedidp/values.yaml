###############################################################
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

keycloak:
  auth:
    adminUser: admin
    adminPassword: ""
    # -- Secret containing the passwords for admin username 'admin' and management username 'manager'.
    existingSecret: ""
  # -- Run Keycloak in production mode. TLS configuration is required except when using proxy=edge.
  production: false
  # -- reverse Proxy mode edge, reencrypt, passthrough or none;
  # ref: https://www.keycloak.org/server/reverseproxy;
  # If your ingress controller has the SSL Termination, you should set proxy to edge.
  proxy: passthrough
  # -- Setting the path relative to '/' for serving resources:
  # as we're migrating from 16.1.1 version which was using the trailing 'auth', we're setting it to '/auth/'.
  # ref: https://www.keycloak.org/migration/migrating-to-quarkus#_default_context_path_changed
  httpRelativePath: "/auth/"
  replicaCount: 1
  extraVolumes:
    - name: themes-catenax-shared
      emptyDir: {}
    - name: themes-catenax-shared-portal
      emptyDir: {}
  extraVolumeMounts:
    - name: themes-catenax-shared
      mountPath: "/opt/bitnami/keycloak/themes/catenax-shared"
    - name: themes-catenax-shared-portal
      mountPath: "/opt/bitnami/keycloak/themes/catenax-shared-portal"
  initContainers:
    - name: import
      image: docker.io/tractusx/portal-iam:v3.0.1
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying themes-catenax-shared..."
          cp -R /import/themes/catenax-shared/* /themes-catenax-shared
          echo "Copying themes-catenax-shared-portal..."
          cp -R /import/themes/catenax-shared-portal/* /themes-catenax-shared-portal
      volumeMounts:
      - name: themes-catenax-shared
        mountPath: "/themes-catenax-shared"
      - name: themes-catenax-shared-portal
        mountPath: "/themes-catenax-shared-portal"
  service:
    sessionAffinity: ClientIP
  ingress:
    enabled: false
    ingressClassName: "nginx"
    # -- Provide default path for the ingress record.
    hostname: "sharedidp.example.org"
    annotations:
      # -- Enable TLS configuration for the host defined at `ingress.hostname` parameter;
      # TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`;
      # Provide the name of ClusterIssuer to acquire the certificate required for this Ingress
      cert-manager.io/cluster-issuer: ""
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
      nginx.ingress.kubernetes.io/cors-allow-origin: "https://sharedidp.example.org"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
      nginx.ingress.kubernetes.io/use-regex: "true"
    tls: true
  rbac:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
  postgresql:
  # -- PostgreSQL chart configuration (recommended for demonstration purposes only);
  # default configurations:
  # host: "sharedidp-postgresql-primary",
  # port: 5432;
    # Switch to enable or disable the PostgreSQL helm chart.
    enabled: true
    # -- Setting to Postgres version 15 as that is the aligned version,
    # https://eclipse-tractusx.github.io/docs/release/trg-5/trg-5-07/#aligning-dependency-versions).
    # Keycloak helm-chart from Bitnami has moved on to version 16.
    image:
      tag: "15-debian-11"
    commonLabels:
      app.kubernetes.io/version: "15"
    auth:
      # -- Non-root username.
      username: kcshared
      # -- Non-root user password.
      password: ""
      # -- Root user password.
      postgresPassword: ""
      # -- Database name.
      database: iamsharedidp
      # -- Secret containing the passwords for root usernames postgres and non-root username kcshared.
      existingSecret: ""
    architecture: standalone
  externalDatabase:
  # -- External PostgreSQL configuration
  # IMPORTANT: non-root db user needs needs to be created beforehand on external database.
    host: ""
    # -- Database port number.
    port: 5432
    # -- Non-root username.
    user: ""
    # -- Database name.
    database: ""
    # -- Password for the non-root username.
    password: ""
    # -- Secret containing the database credentials
    existingSecret: ""
    existingSecretHostKey: ""
    existingSecretPortKey: ""
    existingSecretUserKey: ""
    existingSecretDatabaseKey: ""
    existingSecretPasswordKey: ""

realmSeeding:
# -- Seeding job to create and update the CX-Central realm:
# besides creating the CX-Central realm, the job can be used to update
# the configuration of the realm when upgrading to a new version;
# Please also refer to the 'Post-Upgrade Configuration' section in the README.md
# for configuration possibly not covered by the seeding job
  enabled: true
  realms:
    cxOperator:
      name: "CX-Operator"
      # -- Set redirect and jwks addresses as well as clients secret for the connection to the CX-Central (centralidp)
      cxCentralConnection:
        clientId: "central-idp"
        # PLEASE SET CLIENT SECRET for all non-testing and non-local purposes, default value is "changeme"
        clientSecret: ""
        redirect: "http://centralidp.example.org/auth/realms/CX-Central/broker/CX-Operator/endpoint/*"
        jwksUrl: "http://centralidp.example.org/auth/realms/CX-Central/protocol/openid-connect/certs"
      mailing:
        host: "smtp.example.org"
        port: "123"
        user: "smtp-user"
        password: ""
        from: "email@example.org"
        replyTo: "email@example.org"
      # -- Option to provide an existingSecret for mailing configuration
      existingSecret: ""
    master:
      name: "master"
      serviceAccounts:
        # -- Set clients secret for the service account which enables the portal to provision new realms
        provisioning:
          clientId: "sa-cl1-reg-1"
          # PLEASE SET CLIENT SECRET for all non-testing and non-local purposes, default value is "changeme"
          clientSecret: ""
        # -- Set clients secret for the service account which enables the portal to manage the CX-Operator realm
        saCxOperator:
          clientId: "saCX-Operator"
          # PLEASE SET CLIENT SECRET for all non-testing and non-local purposes, default value is "changeme"
          clientSecret: ""
      # -- Option to provide an existingSecret for clients secrets with clientId as key and clientSecret as value
      existingSecret: ""
  image: "192.168.49.2:5000/iam-seeding:latest"
  imagePullPolicy: "Always"
  portContainer: 8080
  authRealm: "master"
  useAuthTrail: "true"
  dataPaths:
    path0: "realms/CX-Operator-realm.json"
    path1: "realms/master-realm.json"
  # -- We recommend to review the default resource limits as this should a conscious choice.
  resources:
    requests:
      cpu: 250m
      memory: 600M
    limits:
      cpu: 500m
      memory: 600M
  extraVolumes:
    - name: realms
      emptyDir: {}
  extraVolumeMounts:
    - name: realms
      mountPath: "app/realms"
  initContainers:
    - name: init-cx-central
      image: 192.168.49.2:5000/iam:test
      imagePullPolicy: Always
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying realms..."
          cp -R /import/catenax-shared/realms/* /app/realms
      volumeMounts:
      - name: realms
        mountPath: "app/realms"
